import ctypes

GL_2D: int = ...
GL_2_BYTES: int = ...
GL_3D: int = ...
GL_3D_COLOR: int = ...
GL_3D_COLOR_TEXTURE: int = ...
GL_3_BYTES: int = ...
GL_4D_COLOR_TEXTURE: int = ...
GL_4_BYTES: int = ...
GL_ACCUM: int = ...
GL_ACCUM_ALPHA_BITS: int = ...
GL_ACCUM_BLUE_BITS: int = ...
GL_ACCUM_BUFFER_BIT: int = ...
GL_ACCUM_CLEAR_VALUE: int = ...
GL_ACCUM_GREEN_BITS: int = ...
GL_ACCUM_RED_BITS: int = ...
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: int = ...
GL_ACTIVE_ATTRIBUTES: int = ...
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: int = ...
GL_ACTIVE_PROGRAM: int = ...
GL_ACTIVE_RESOURCES: int = ...
GL_ACTIVE_SUBROUTINES: int = ...
GL_ACTIVE_SUBROUTINE_MAX_LENGTH: int = ...
GL_ACTIVE_SUBROUTINE_UNIFORMS: int = ...
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: int = ...
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: int = ...
GL_ACTIVE_TEXTURE: int = ...
GL_ACTIVE_UNIFORMS: int = ...
GL_ACTIVE_UNIFORM_BLOCKS: int = ...
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: int = ...
GL_ACTIVE_UNIFORM_MAX_LENGTH: int = ...
GL_ACTIVE_VARIABLES: int = ...
GL_ADD: int = ...
GL_ADD_SIGNED: int = ...
GL_ALIASED_LINE_WIDTH_RANGE: int = ...
GL_ALIASED_POINT_SIZE_RANGE: int = ...
GL_ALL_ATTRIB_BITS: int = ...
GL_ALL_BARRIER_BITS: int = ...
GL_ALL_SHADER_BITS: int = ...
GL_ALPHA: int = ...
GL_ALPHA12: int = ...
GL_ALPHA16: int = ...
GL_ALPHA4: int = ...
GL_ALPHA8: int = ...
GL_ALPHA_BIAS: int = ...
GL_ALPHA_BITS: int = ...
GL_ALPHA_INTEGER: int = ...
GL_ALPHA_SCALE: int = ...
GL_ALPHA_TEST: int = ...
GL_ALPHA_TEST_FUNC: int = ...
GL_ALPHA_TEST_REF: int = ...
GL_ALREADY_SIGNALED: int = ...
GL_ALWAYS: int = ...
GL_AMBIENT: int = ...
GL_AMBIENT_AND_DIFFUSE: int = ...
GL_AND: int = ...
GL_AND_INVERTED: int = ...
GL_AND_REVERSE: int = ...
GL_ANY_SAMPLES_PASSED: int = ...
GL_ANY_SAMPLES_PASSED_CONSERVATIVE: int = ...
GL_ARRAY_BUFFER: int = ...
GL_ARRAY_BUFFER_BINDING: int = ...
GL_ARRAY_SIZE: int = ...
GL_ARRAY_STRIDE: int = ...
GL_ATOMIC_COUNTER_BARRIER_BIT: int = ...
GL_ATOMIC_COUNTER_BUFFER: int = ...
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: int = ...
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: int = ...
GL_ATOMIC_COUNTER_BUFFER_BINDING: int = ...
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE: int = ...
GL_ATOMIC_COUNTER_BUFFER_INDEX: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: int = ...
GL_ATOMIC_COUNTER_BUFFER_SIZE: int = ...
GL_ATOMIC_COUNTER_BUFFER_START: int = ...
GL_ATTACHED_SHADERS: int = ...
GL_ATTRIB_STACK_DEPTH: int = ...
GL_AUTO_GENERATE_MIPMAP: int = ...
GL_AUTO_NORMAL: int = ...
GL_AUX0: int = ...
GL_AUX1: int = ...
GL_AUX2: int = ...
GL_AUX3: int = ...
GL_AUX_BUFFERS: int = ...
GL_BACK: int = ...
GL_BACK_LEFT: int = ...
GL_BACK_RIGHT: int = ...
GL_BGR: int = ...
GL_BGRA: int = ...
GL_BGRA_INTEGER: int = ...
GL_BGR_INTEGER: int = ...
GL_BITMAP: int = ...
GL_BITMAP_TOKEN: int = ...
GL_BLEND: int = ...
GL_BLEND_COLOR: int = ...
GL_BLEND_DST: int = ...
GL_BLEND_DST_ALPHA: int = ...
GL_BLEND_DST_RGB: int = ...
GL_BLEND_EQUATION: int = ...
GL_BLEND_EQUATION_ALPHA: int = ...
GL_BLEND_EQUATION_RGB: int = ...
GL_BLEND_SRC: int = ...
GL_BLEND_SRC_ALPHA: int = ...
GL_BLEND_SRC_RGB: int = ...
GL_BLOCK_INDEX: int = ...
GL_BLUE: int = ...
GL_BLUE_BIAS: int = ...
GL_BLUE_BITS: int = ...
GL_BLUE_INTEGER: int = ...
GL_BLUE_SCALE: int = ...
GL_BOOL: int = ...
GL_BOOL_VEC2: int = ...
GL_BOOL_VEC3: int = ...
GL_BOOL_VEC4: int = ...
GL_BUFFER: int = ...
GL_BUFFER_ACCESS: int = ...
GL_BUFFER_ACCESS_FLAGS: int = ...
GL_BUFFER_BINDING: int = ...
GL_BUFFER_DATA_SIZE: int = ...
GL_BUFFER_IMMUTABLE_STORAGE: int = ...
GL_BUFFER_KHR: int = ...
GL_BUFFER_MAPPED: int = ...
GL_BUFFER_MAP_LENGTH: int = ...
GL_BUFFER_MAP_OFFSET: int = ...
GL_BUFFER_MAP_POINTER: int = ...
GL_BUFFER_SIZE: int = ...
GL_BUFFER_STORAGE_FLAGS: int = ...
GL_BUFFER_UPDATE_BARRIER_BIT: int = ...
GL_BUFFER_USAGE: int = ...
GL_BUFFER_VARIABLE: int = ...
GL_BYTE: int = ...
GL_C3F_V3F: int = ...
GL_C4F_N3F_V3F: int = ...
GL_C4UB_V2F: int = ...
GL_C4UB_V3F: int = ...
GL_CAVEAT_SUPPORT: int = ...
GL_CCW: int = ...
GL_CLAMP: int = ...
GL_CLAMP_FRAGMENT_COLOR: int = ...
GL_CLAMP_READ_COLOR: int = ...
GL_CLAMP_TO_BORDER: int = ...
GL_CLAMP_TO_EDGE: int = ...
GL_CLAMP_VERTEX_COLOR: int = ...
GL_CLEAR: int = ...
GL_CLEAR_BUFFER: int = ...
GL_CLEAR_TEXTURE: int = ...
GL_CLIENT_ACTIVE_TEXTURE: int = ...
GL_CLIENT_ALL_ATTRIB_BITS: int = ...
GL_CLIENT_ATTRIB_STACK_DEPTH: int = ...
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: int = ...
GL_CLIENT_PIXEL_STORE_BIT: int = ...
GL_CLIENT_STORAGE_BIT: int = ...
GL_CLIENT_VERTEX_ARRAY_BIT: int = ...
GL_CLIPPING_INPUT_PRIMITIVES: int = ...
GL_CLIPPING_OUTPUT_PRIMITIVES: int = ...
GL_CLIP_DEPTH_MODE: int = ...
GL_CLIP_DISTANCE0: int = ...
GL_CLIP_DISTANCE1: int = ...
GL_CLIP_DISTANCE2: int = ...
GL_CLIP_DISTANCE3: int = ...
GL_CLIP_DISTANCE4: int = ...
GL_CLIP_DISTANCE5: int = ...
GL_CLIP_DISTANCE6: int = ...
GL_CLIP_DISTANCE7: int = ...
GL_CLIP_ORIGIN: int = ...
GL_CLIP_PLANE0: int = ...
GL_CLIP_PLANE1: int = ...
GL_CLIP_PLANE2: int = ...
GL_CLIP_PLANE3: int = ...
GL_CLIP_PLANE4: int = ...
GL_CLIP_PLANE5: int = ...
GL_COEFF: int = ...
GL_COLOR: int = ...
GL_COLOR_ARRAY: int = ...
GL_COLOR_ARRAY_BUFFER_BINDING: int = ...
GL_COLOR_ARRAY_POINTER: int = ...
GL_COLOR_ARRAY_SIZE: int = ...
GL_COLOR_ARRAY_STRIDE: int = ...
GL_COLOR_ARRAY_TYPE: int = ...
GL_COLOR_ATTACHMENT0: int = ...
GL_COLOR_ATTACHMENT1: int = ...
GL_COLOR_ATTACHMENT10: int = ...
GL_COLOR_ATTACHMENT11: int = ...
GL_COLOR_ATTACHMENT12: int = ...
GL_COLOR_ATTACHMENT13: int = ...
GL_COLOR_ATTACHMENT14: int = ...
GL_COLOR_ATTACHMENT15: int = ...
GL_COLOR_ATTACHMENT16: int = ...
GL_COLOR_ATTACHMENT17: int = ...
GL_COLOR_ATTACHMENT18: int = ...
GL_COLOR_ATTACHMENT19: int = ...
GL_COLOR_ATTACHMENT2: int = ...
GL_COLOR_ATTACHMENT20: int = ...
GL_COLOR_ATTACHMENT21: int = ...
GL_COLOR_ATTACHMENT22: int = ...
GL_COLOR_ATTACHMENT23: int = ...
GL_COLOR_ATTACHMENT24: int = ...
GL_COLOR_ATTACHMENT25: int = ...
GL_COLOR_ATTACHMENT26: int = ...
GL_COLOR_ATTACHMENT27: int = ...
GL_COLOR_ATTACHMENT28: int = ...
GL_COLOR_ATTACHMENT29: int = ...
GL_COLOR_ATTACHMENT3: int = ...
GL_COLOR_ATTACHMENT30: int = ...
GL_COLOR_ATTACHMENT31: int = ...
GL_COLOR_ATTACHMENT4: int = ...
GL_COLOR_ATTACHMENT5: int = ...
GL_COLOR_ATTACHMENT6: int = ...
GL_COLOR_ATTACHMENT7: int = ...
GL_COLOR_ATTACHMENT8: int = ...
GL_COLOR_ATTACHMENT9: int = ...
GL_COLOR_BUFFER_BIT: int = ...
GL_COLOR_CLEAR_VALUE: int = ...
GL_COLOR_COMPONENTS: int = ...
GL_COLOR_ENCODING: int = ...
GL_COLOR_INDEX: int = ...
GL_COLOR_INDEXES: int = ...
GL_COLOR_LOGIC_OP: int = ...
GL_COLOR_MATERIAL: int = ...
GL_COLOR_MATERIAL_FACE: int = ...
GL_COLOR_MATERIAL_PARAMETER: int = ...
GL_COLOR_MATRIX: int = ...
GL_COLOR_MATRIX_STACK_DEPTH: int = ...
GL_COLOR_RENDERABLE: int = ...
GL_COLOR_SUM: int = ...
GL_COLOR_TABLE: int = ...
GL_COLOR_TABLE_ALPHA_SIZE: int = ...
GL_COLOR_TABLE_BIAS: int = ...
GL_COLOR_TABLE_BLUE_SIZE: int = ...
GL_COLOR_TABLE_FORMAT: int = ...
GL_COLOR_TABLE_GREEN_SIZE: int = ...
GL_COLOR_TABLE_INTENSITY_SIZE: int = ...
GL_COLOR_TABLE_LUMINANCE_SIZE: int = ...
GL_COLOR_TABLE_RED_SIZE: int = ...
GL_COLOR_TABLE_SCALE: int = ...
GL_COLOR_TABLE_WIDTH: int = ...
GL_COLOR_WRITEMASK: int = ...
GL_COMBINE: int = ...
GL_COMBINE_ALPHA: int = ...
GL_COMBINE_RGB: int = ...
GL_COMMAND_BARRIER_BIT: int = ...
GL_COMPARE_REF_TO_TEXTURE: int = ...
GL_COMPARE_R_TO_TEXTURE: int = ...
GL_COMPATIBLE_SUBROUTINES: int = ...
GL_COMPILE: int = ...
GL_COMPILE_AND_EXECUTE: int = ...
GL_COMPILE_STATUS: int = ...
GL_COMPRESSED_ALPHA: int = ...
GL_COMPRESSED_INTENSITY: int = ...
GL_COMPRESSED_LUMINANCE: int = ...
GL_COMPRESSED_LUMINANCE_ALPHA: int = ...
GL_COMPRESSED_R11_EAC: int = ...
GL_COMPRESSED_RED: int = ...
GL_COMPRESSED_RED_RGTC1: int = ...
GL_COMPRESSED_RG: int = ...
GL_COMPRESSED_RG11_EAC: int = ...
GL_COMPRESSED_RGB: int = ...
GL_COMPRESSED_RGB8_ETC2: int = ...
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: int = ...
GL_COMPRESSED_RGBA: int = ...
GL_COMPRESSED_RGBA8_ETC2_EAC: int = ...
GL_COMPRESSED_RGBA_BPTC_UNORM: int = ...
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT: int = ...
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT: int = ...
GL_COMPRESSED_RG_RGTC2: int = ...
GL_COMPRESSED_SIGNED_R11_EAC: int = ...
GL_COMPRESSED_SIGNED_RED_RGTC1: int = ...
GL_COMPRESSED_SIGNED_RG11_EAC: int = ...
GL_COMPRESSED_SIGNED_RG_RGTC2: int = ...
GL_COMPRESSED_SLUMINANCE: int = ...
GL_COMPRESSED_SLUMINANCE_ALPHA: int = ...
GL_COMPRESSED_SRGB: int = ...
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: int = ...
GL_COMPRESSED_SRGB8_ETC2: int = ...
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: int = ...
GL_COMPRESSED_SRGB_ALPHA: int = ...
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM: int = ...
GL_COMPRESSED_TEXTURE_FORMATS: int = ...
GL_COMPUTE_SHADER: int = ...
GL_COMPUTE_SHADER_BIT: int = ...
GL_COMPUTE_SHADER_INVOCATIONS: int = ...
GL_COMPUTE_SUBROUTINE: int = ...
GL_COMPUTE_SUBROUTINE_UNIFORM: int = ...
GL_COMPUTE_TEXTURE: int = ...
GL_COMPUTE_WORK_GROUP_SIZE: int = ...
GL_CONDITION_SATISFIED: int = ...
GL_CONSTANT: int = ...
GL_CONSTANT_ALPHA: int = ...
GL_CONSTANT_ATTENUATION: int = ...
GL_CONSTANT_BORDER: int = ...
GL_CONSTANT_COLOR: int = ...
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT: int = ...
GL_CONTEXT_CORE_PROFILE_BIT: int = ...
GL_CONTEXT_FLAGS: int = ...
GL_CONTEXT_FLAG_DEBUG_BIT: int = ...
GL_CONTEXT_FLAG_DEBUG_BIT_KHR: int = ...
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: int = ...
GL_CONTEXT_FLAG_NO_ERROR_BIT: int = ...
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT: int = ...
GL_CONTEXT_LOST: int = ...
GL_CONTEXT_PROFILE_MASK: int = ...
GL_CONTEXT_RELEASE_BEHAVIOR: int = ...
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: int = ...
GL_CONVOLUTION_1D: int = ...
GL_CONVOLUTION_2D: int = ...
GL_CONVOLUTION_BORDER_COLOR: int = ...
GL_CONVOLUTION_BORDER_MODE: int = ...
GL_CONVOLUTION_FILTER_BIAS: int = ...
GL_CONVOLUTION_FILTER_SCALE: int = ...
GL_CONVOLUTION_FORMAT: int = ...
GL_CONVOLUTION_HEIGHT: int = ...
GL_CONVOLUTION_WIDTH: int = ...
GL_COORD_REPLACE: int = ...
GL_COPY: int = ...
GL_COPY_INVERTED: int = ...
GL_COPY_PIXEL_TOKEN: int = ...
GL_COPY_READ_BUFFER: int = ...
GL_COPY_READ_BUFFER_BINDING: int = ...
GL_COPY_WRITE_BUFFER: int = ...
GL_COPY_WRITE_BUFFER_BINDING: int = ...
GL_CULL_FACE: int = ...
GL_CULL_FACE_MODE: int = ...
GL_CURRENT_BIT: int = ...
GL_CURRENT_COLOR: int = ...
GL_CURRENT_FOG_COORD: int = ...
GL_CURRENT_FOG_COORDINATE: int = ...
GL_CURRENT_INDEX: int = ...
GL_CURRENT_NORMAL: int = ...
GL_CURRENT_PROGRAM: int = ...
GL_CURRENT_QUERY: int = ...
GL_CURRENT_RASTER_COLOR: int = ...
GL_CURRENT_RASTER_DISTANCE: int = ...
GL_CURRENT_RASTER_INDEX: int = ...
GL_CURRENT_RASTER_POSITION: int = ...
GL_CURRENT_RASTER_POSITION_VALID: int = ...
GL_CURRENT_RASTER_SECONDARY_COLOR: int = ...
GL_CURRENT_RASTER_TEXTURE_COORDS: int = ...
GL_CURRENT_SECONDARY_COLOR: int = ...
GL_CURRENT_TEXTURE_COORDS: int = ...
GL_CURRENT_VERTEX_ATTRIB: int = ...
GL_CW: int = ...
GL_DEBUG_CALLBACK_FUNCTION: int = ...
GL_DEBUG_CALLBACK_FUNCTION_KHR: int = ...
GL_DEBUG_CALLBACK_USER_PARAM: int = ...
GL_DEBUG_CALLBACK_USER_PARAM_KHR: int = ...
GL_DEBUG_GROUP_STACK_DEPTH: int = ...
GL_DEBUG_GROUP_STACK_DEPTH_KHR: int = ...
GL_DEBUG_LOGGED_MESSAGES: int = ...
GL_DEBUG_LOGGED_MESSAGES_KHR: int = ...
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: int = ...
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR: int = ...
GL_DEBUG_OUTPUT: int = ...
GL_DEBUG_OUTPUT_KHR: int = ...
GL_DEBUG_OUTPUT_SYNCHRONOUS: int = ...
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR: int = ...
GL_DEBUG_SEVERITY_HIGH: int = ...
GL_DEBUG_SEVERITY_HIGH_KHR: int = ...
GL_DEBUG_SEVERITY_LOW: int = ...
GL_DEBUG_SEVERITY_LOW_KHR: int = ...
GL_DEBUG_SEVERITY_MEDIUM: int = ...
GL_DEBUG_SEVERITY_MEDIUM_KHR: int = ...
GL_DEBUG_SEVERITY_NOTIFICATION: int = ...
GL_DEBUG_SEVERITY_NOTIFICATION_KHR: int = ...
GL_DEBUG_SOURCE_API: int = ...
GL_DEBUG_SOURCE_API_KHR: int = ...
GL_DEBUG_SOURCE_APPLICATION: int = ...
GL_DEBUG_SOURCE_APPLICATION_KHR: int = ...
GL_DEBUG_SOURCE_OTHER: int = ...
GL_DEBUG_SOURCE_OTHER_KHR: int = ...
GL_DEBUG_SOURCE_SHADER_COMPILER: int = ...
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR: int = ...
GL_DEBUG_SOURCE_THIRD_PARTY: int = ...
GL_DEBUG_SOURCE_THIRD_PARTY_KHR: int = ...
GL_DEBUG_SOURCE_WINDOW_SYSTEM: int = ...
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR: int = ...
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: int = ...
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR: int = ...
GL_DEBUG_TYPE_ERROR: int = ...
GL_DEBUG_TYPE_ERROR_KHR: int = ...
GL_DEBUG_TYPE_MARKER: int = ...
GL_DEBUG_TYPE_MARKER_KHR: int = ...
GL_DEBUG_TYPE_OTHER: int = ...
GL_DEBUG_TYPE_OTHER_KHR: int = ...
GL_DEBUG_TYPE_PERFORMANCE: int = ...
GL_DEBUG_TYPE_PERFORMANCE_KHR: int = ...
GL_DEBUG_TYPE_POP_GROUP: int = ...
GL_DEBUG_TYPE_POP_GROUP_KHR: int = ...
GL_DEBUG_TYPE_PORTABILITY: int = ...
GL_DEBUG_TYPE_PORTABILITY_KHR: int = ...
GL_DEBUG_TYPE_PUSH_GROUP: int = ...
GL_DEBUG_TYPE_PUSH_GROUP_KHR: int = ...
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: int = ...
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR: int = ...
GL_DECAL: int = ...
GL_DECR: int = ...
GL_DECR_WRAP: int = ...
GL_DELETE_STATUS: int = ...
GL_DEPTH: int = ...
GL_DEPTH24_STENCIL8: int = ...
GL_DEPTH32F_STENCIL8: int = ...
GL_DEPTH_ATTACHMENT: int = ...
GL_DEPTH_BIAS: int = ...
GL_DEPTH_BITS: int = ...
GL_DEPTH_BUFFER: int = ...
GL_DEPTH_BUFFER_BIT: int = ...
GL_DEPTH_CLAMP: int = ...
GL_DEPTH_CLEAR_VALUE: int = ...
GL_DEPTH_COMPONENT: int = ...
GL_DEPTH_COMPONENT16: int = ...
GL_DEPTH_COMPONENT24: int = ...
GL_DEPTH_COMPONENT32: int = ...
GL_DEPTH_COMPONENT32F: int = ...
GL_DEPTH_COMPONENTS: int = ...
GL_DEPTH_FUNC: int = ...
GL_DEPTH_RANGE: int = ...
GL_DEPTH_RENDERABLE: int = ...
GL_DEPTH_SCALE: int = ...
GL_DEPTH_STENCIL: int = ...
GL_DEPTH_STENCIL_ATTACHMENT: int = ...
GL_DEPTH_STENCIL_TEXTURE_MODE: int = ...
GL_DEPTH_TEST: int = ...
GL_DEPTH_TEXTURE_MODE: int = ...
GL_DEPTH_WRITEMASK: int = ...
GL_DIFFUSE: int = ...
GL_DISPATCH_INDIRECT_BUFFER: int = ...
GL_DISPATCH_INDIRECT_BUFFER_BINDING: int = ...
GL_DISPLAY_LIST: int = ...
GL_DITHER: int = ...
GL_DOMAIN: int = ...
GL_DONT_CARE: int = ...
GL_DOT3_RGB: int = ...
GL_DOT3_RGBA: int = ...
GL_DOUBLE: int = ...
GL_DOUBLEBUFFER: int = ...
GL_DOUBLE_MAT2: int = ...
GL_DOUBLE_MAT2x3: int = ...
GL_DOUBLE_MAT2x4: int = ...
GL_DOUBLE_MAT3: int = ...
GL_DOUBLE_MAT3x2: int = ...
GL_DOUBLE_MAT3x4: int = ...
GL_DOUBLE_MAT4: int = ...
GL_DOUBLE_MAT4x2: int = ...
GL_DOUBLE_MAT4x3: int = ...
GL_DOUBLE_VEC2: int = ...
GL_DOUBLE_VEC3: int = ...
GL_DOUBLE_VEC4: int = ...
GL_DRAW_BUFFER: int = ...
GL_DRAW_BUFFER0: int = ...
GL_DRAW_BUFFER1: int = ...
GL_DRAW_BUFFER10: int = ...
GL_DRAW_BUFFER11: int = ...
GL_DRAW_BUFFER12: int = ...
GL_DRAW_BUFFER13: int = ...
GL_DRAW_BUFFER14: int = ...
GL_DRAW_BUFFER15: int = ...
GL_DRAW_BUFFER2: int = ...
GL_DRAW_BUFFER3: int = ...
GL_DRAW_BUFFER4: int = ...
GL_DRAW_BUFFER5: int = ...
GL_DRAW_BUFFER6: int = ...
GL_DRAW_BUFFER7: int = ...
GL_DRAW_BUFFER8: int = ...
GL_DRAW_BUFFER9: int = ...
GL_DRAW_FRAMEBUFFER: int = ...
GL_DRAW_FRAMEBUFFER_BINDING: int = ...
GL_DRAW_INDIRECT_BUFFER: int = ...
GL_DRAW_INDIRECT_BUFFER_BINDING: int = ...
GL_DRAW_PIXEL_TOKEN: int = ...
GL_DST_ALPHA: int = ...
GL_DST_COLOR: int = ...
GL_DYNAMIC_COPY: int = ...
GL_DYNAMIC_DRAW: int = ...
GL_DYNAMIC_READ: int = ...
GL_DYNAMIC_STORAGE_BIT: int = ...
GL_EDGE_FLAG: int = ...
GL_EDGE_FLAG_ARRAY: int = ...
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING: int = ...
GL_EDGE_FLAG_ARRAY_POINTER: int = ...
GL_EDGE_FLAG_ARRAY_STRIDE: int = ...
GL_ELEMENT_ARRAY_BARRIER_BIT: int = ...
GL_ELEMENT_ARRAY_BUFFER: int = ...
GL_ELEMENT_ARRAY_BUFFER_BINDING: int = ...
GL_EMISSION: int = ...
GL_ENABLE_BIT: int = ...
GL_EQUAL: int = ...
GL_EQUIV: int = ...
GL_EVAL_BIT: int = ...
GL_EXP: int = ...
GL_EXP2: int = ...
GL_EXTENSIONS: int = ...
GL_EYE_LINEAR: int = ...
GL_EYE_PLANE: int = ...
GL_FALSE: int = ...
GL_FASTEST: int = ...
GL_FEEDBACK: int = ...
GL_FEEDBACK_BUFFER_POINTER: int = ...
GL_FEEDBACK_BUFFER_SIZE: int = ...
GL_FEEDBACK_BUFFER_TYPE: int = ...
GL_FILL: int = ...
GL_FILTER: int = ...
GL_FIRST_VERTEX_CONVENTION: int = ...
GL_FIXED: int = ...
GL_FIXED_ONLY: int = ...
GL_FLAT: int = ...
GL_FLOAT: int = ...
GL_FLOAT_32_UNSIGNED_INT_24_8_REV: int = ...
GL_FLOAT_MAT2: int = ...
GL_FLOAT_MAT2x3: int = ...
GL_FLOAT_MAT2x4: int = ...
GL_FLOAT_MAT3: int = ...
GL_FLOAT_MAT3x2: int = ...
GL_FLOAT_MAT3x4: int = ...
GL_FLOAT_MAT4: int = ...
GL_FLOAT_MAT4x2: int = ...
GL_FLOAT_MAT4x3: int = ...
GL_FLOAT_VEC2: int = ...
GL_FLOAT_VEC3: int = ...
GL_FLOAT_VEC4: int = ...
GL_FOG: int = ...
GL_FOG_BIT: int = ...
GL_FOG_COLOR: int = ...
GL_FOG_COORD: int = ...
GL_FOG_COORDINATE: int = ...
GL_FOG_COORDINATE_ARRAY: int = ...
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING: int = ...
GL_FOG_COORDINATE_ARRAY_POINTER: int = ...
GL_FOG_COORDINATE_ARRAY_STRIDE: int = ...
GL_FOG_COORDINATE_ARRAY_TYPE: int = ...
GL_FOG_COORDINATE_SOURCE: int = ...
GL_FOG_COORD_ARRAY: int = ...
GL_FOG_COORD_ARRAY_BUFFER_BINDING: int = ...
GL_FOG_COORD_ARRAY_POINTER: int = ...
GL_FOG_COORD_ARRAY_STRIDE: int = ...
GL_FOG_COORD_ARRAY_TYPE: int = ...
GL_FOG_COORD_SRC: int = ...
GL_FOG_DENSITY: int = ...
GL_FOG_END: int = ...
GL_FOG_HINT: int = ...
GL_FOG_INDEX: int = ...
GL_FOG_MODE: int = ...
GL_FOG_START: int = ...
GL_FRACTIONAL_EVEN: int = ...
GL_FRACTIONAL_ODD: int = ...
GL_FRAGMENT_DEPTH: int = ...
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS: int = ...
GL_FRAGMENT_SHADER: int = ...
GL_FRAGMENT_SHADER_BIT: int = ...
GL_FRAGMENT_SHADER_DERIVATIVE_HINT: int = ...
GL_FRAGMENT_SHADER_INVOCATIONS: int = ...
GL_FRAGMENT_SUBROUTINE: int = ...
GL_FRAGMENT_SUBROUTINE_UNIFORM: int = ...
GL_FRAGMENT_TEXTURE: int = ...
GL_FRAMEBUFFER: int = ...
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: int = ...
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_LAYERED: int = ...
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: int = ...
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: int = ...
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: int = ...
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: int = ...
GL_FRAMEBUFFER_BARRIER_BIT: int = ...
GL_FRAMEBUFFER_BINDING: int = ...
GL_FRAMEBUFFER_BLEND: int = ...
GL_FRAMEBUFFER_COMPLETE: int = ...
GL_FRAMEBUFFER_DEFAULT: int = ...
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: int = ...
GL_FRAMEBUFFER_DEFAULT_HEIGHT: int = ...
GL_FRAMEBUFFER_DEFAULT_LAYERS: int = ...
GL_FRAMEBUFFER_DEFAULT_SAMPLES: int = ...
GL_FRAMEBUFFER_DEFAULT_WIDTH: int = ...
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: int = ...
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: int = ...
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: int = ...
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: int = ...
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: int = ...
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: int = ...
GL_FRAMEBUFFER_RENDERABLE: int = ...
GL_FRAMEBUFFER_RENDERABLE_LAYERED: int = ...
GL_FRAMEBUFFER_SRGB: int = ...
GL_FRAMEBUFFER_UNDEFINED: int = ...
GL_FRAMEBUFFER_UNSUPPORTED: int = ...
GL_FRONT: int = ...
GL_FRONT_AND_BACK: int = ...
GL_FRONT_FACE: int = ...
GL_FRONT_LEFT: int = ...
GL_FRONT_RIGHT: int = ...
GL_FULL_SUPPORT: int = ...
GL_FUNC_ADD: int = ...
GL_FUNC_REVERSE_SUBTRACT: int = ...
GL_FUNC_SUBTRACT: int = ...
GL_GENERATE_MIPMAP: int = ...
GL_GENERATE_MIPMAP_HINT: int = ...
GL_GEOMETRY_INPUT_TYPE: int = ...
GL_GEOMETRY_OUTPUT_TYPE: int = ...
GL_GEOMETRY_SHADER: int = ...
GL_GEOMETRY_SHADER_BIT: int = ...
GL_GEOMETRY_SHADER_INVOCATIONS: int = ...
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED: int = ...
GL_GEOMETRY_SUBROUTINE: int = ...
GL_GEOMETRY_SUBROUTINE_UNIFORM: int = ...
GL_GEOMETRY_TEXTURE: int = ...
GL_GEOMETRY_VERTICES_OUT: int = ...
GL_GEQUAL: int = ...
GL_GET_TEXTURE_IMAGE_FORMAT: int = ...
GL_GET_TEXTURE_IMAGE_TYPE: int = ...
GL_GREATER: int = ...
GL_GREEN: int = ...
GL_GREEN_BIAS: int = ...
GL_GREEN_BITS: int = ...
GL_GREEN_INTEGER: int = ...
GL_GREEN_SCALE: int = ...
GL_GUILTY_CONTEXT_RESET: int = ...
GL_HALF_FLOAT: int = ...
GL_HALF_NV: int = ...
GL_HIGH_FLOAT: int = ...
GL_HIGH_INT: int = ...
GL_HINT_BIT: int = ...
GL_HISTOGRAM: int = ...
GL_HISTOGRAM_ALPHA_SIZE: int = ...
GL_HISTOGRAM_BLUE_SIZE: int = ...
GL_HISTOGRAM_FORMAT: int = ...
GL_HISTOGRAM_GREEN_SIZE: int = ...
GL_HISTOGRAM_LUMINANCE_SIZE: int = ...
GL_HISTOGRAM_RED_SIZE: int = ...
GL_HISTOGRAM_SINK: int = ...
GL_HISTOGRAM_WIDTH: int = ...
GL_IMAGE_1D: int = ...
GL_IMAGE_1D_ARRAY: int = ...
GL_IMAGE_2D: int = ...
GL_IMAGE_2D_ARRAY: int = ...
GL_IMAGE_2D_MULTISAMPLE: int = ...
GL_IMAGE_2D_MULTISAMPLE_ARRAY: int = ...
GL_IMAGE_2D_RECT: int = ...
GL_IMAGE_3D: int = ...
GL_IMAGE_BINDING_ACCESS: int = ...
GL_IMAGE_BINDING_FORMAT: int = ...
GL_IMAGE_BINDING_LAYER: int = ...
GL_IMAGE_BINDING_LAYERED: int = ...
GL_IMAGE_BINDING_LEVEL: int = ...
GL_IMAGE_BINDING_NAME: int = ...
GL_IMAGE_BUFFER: int = ...
GL_IMAGE_CLASS_10_10_10_2: int = ...
GL_IMAGE_CLASS_11_11_10: int = ...
GL_IMAGE_CLASS_1_X_16: int = ...
GL_IMAGE_CLASS_1_X_32: int = ...
GL_IMAGE_CLASS_1_X_8: int = ...
GL_IMAGE_CLASS_2_X_16: int = ...
GL_IMAGE_CLASS_2_X_32: int = ...
GL_IMAGE_CLASS_2_X_8: int = ...
GL_IMAGE_CLASS_4_X_16: int = ...
GL_IMAGE_CLASS_4_X_32: int = ...
GL_IMAGE_CLASS_4_X_8: int = ...
GL_IMAGE_COMPATIBILITY_CLASS: int = ...
GL_IMAGE_CUBE: int = ...
GL_IMAGE_CUBE_MAP_ARRAY: int = ...
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: int = ...
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: int = ...
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: int = ...
GL_IMAGE_PIXEL_FORMAT: int = ...
GL_IMAGE_PIXEL_TYPE: int = ...
GL_IMAGE_TEXEL_SIZE: int = ...
GL_IMPLEMENTATION_COLOR_READ_FORMAT: int = ...
GL_IMPLEMENTATION_COLOR_READ_TYPE: int = ...
GL_INCR: int = ...
GL_INCR_WRAP: int = ...
GL_INDEX: int = ...
GL_INDEX_ARRAY: int = ...
GL_INDEX_ARRAY_BUFFER_BINDING: int = ...
GL_INDEX_ARRAY_POINTER: int = ...
GL_INDEX_ARRAY_STRIDE: int = ...
GL_INDEX_ARRAY_TYPE: int = ...
GL_INDEX_BITS: int = ...
GL_INDEX_CLEAR_VALUE: int = ...
GL_INDEX_LOGIC_OP: int = ...
GL_INDEX_MODE: int = ...
GL_INDEX_OFFSET: int = ...
GL_INDEX_SHIFT: int = ...
GL_INDEX_WRITEMASK: int = ...
GL_INFO_LOG_LENGTH: int = ...
GL_INNOCENT_CONTEXT_RESET: int = ...
GL_INT: int = ...
GL_INTENSITY: int = ...
GL_INTENSITY12: int = ...
GL_INTENSITY16: int = ...
GL_INTENSITY4: int = ...
GL_INTENSITY8: int = ...
GL_INTERLEAVED_ARRAY_POINTER: int = ...
GL_INTERLEAVED_ATTRIBS: int = ...
GL_INTERNALFORMAT_ALPHA_SIZE: int = ...
GL_INTERNALFORMAT_ALPHA_TYPE: int = ...
GL_INTERNALFORMAT_BLUE_SIZE: int = ...
GL_INTERNALFORMAT_BLUE_TYPE: int = ...
GL_INTERNALFORMAT_DEPTH_SIZE: int = ...
GL_INTERNALFORMAT_DEPTH_TYPE: int = ...
GL_INTERNALFORMAT_GREEN_SIZE: int = ...
GL_INTERNALFORMAT_GREEN_TYPE: int = ...
GL_INTERNALFORMAT_PREFERRED: int = ...
GL_INTERNALFORMAT_RED_SIZE: int = ...
GL_INTERNALFORMAT_RED_TYPE: int = ...
GL_INTERNALFORMAT_SHARED_SIZE: int = ...
GL_INTERNALFORMAT_STENCIL_SIZE: int = ...
GL_INTERNALFORMAT_STENCIL_TYPE: int = ...
GL_INTERNALFORMAT_SUPPORTED: int = ...
GL_INTERPOLATE: int = ...
GL_INT_2_10_10_10_REV: int = ...
GL_INT_IMAGE_1D: int = ...
GL_INT_IMAGE_1D_ARRAY: int = ...
GL_INT_IMAGE_2D: int = ...
GL_INT_IMAGE_2D_ARRAY: int = ...
GL_INT_IMAGE_2D_MULTISAMPLE: int = ...
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int = ...
GL_INT_IMAGE_2D_RECT: int = ...
GL_INT_IMAGE_3D: int = ...
GL_INT_IMAGE_BUFFER: int = ...
GL_INT_IMAGE_CUBE: int = ...
GL_INT_IMAGE_CUBE_MAP_ARRAY: int = ...
GL_INT_SAMPLER_1D: int = ...
GL_INT_SAMPLER_1D_ARRAY: int = ...
GL_INT_SAMPLER_2D: int = ...
GL_INT_SAMPLER_2D_ARRAY: int = ...
GL_INT_SAMPLER_2D_MULTISAMPLE: int = ...
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int = ...
GL_INT_SAMPLER_2D_RECT: int = ...
GL_INT_SAMPLER_3D: int = ...
GL_INT_SAMPLER_BUFFER: int = ...
GL_INT_SAMPLER_CUBE: int = ...
GL_INT_SAMPLER_CUBE_MAP_ARRAY: int = ...
GL_INT_VEC2: int = ...
GL_INT_VEC3: int = ...
GL_INT_VEC4: int = ...
GL_INVALID_ENUM: int = ...
GL_INVALID_FRAMEBUFFER_OPERATION: int = ...
GL_INVALID_INDEX: int = ...
GL_INVALID_OPERATION: int = ...
GL_INVALID_VALUE: int = ...
GL_INVERT: int = ...
GL_ISOLINES: int = ...
GL_IS_PER_PATCH: int = ...
GL_IS_ROW_MAJOR: int = ...
GL_KEEP: int = ...
GL_LAST_VERTEX_CONVENTION: int = ...
GL_LAYER_PROVOKING_VERTEX: int = ...
GL_LEFT: int = ...
GL_LEQUAL: int = ...
GL_LESS: int = ...
GL_LIGHT0: int = ...
GL_LIGHT1: int = ...
GL_LIGHT2: int = ...
GL_LIGHT3: int = ...
GL_LIGHT4: int = ...
GL_LIGHT5: int = ...
GL_LIGHT6: int = ...
GL_LIGHT7: int = ...
GL_LIGHTING: int = ...
GL_LIGHTING_BIT: int = ...
GL_LIGHT_MODEL_AMBIENT: int = ...
GL_LIGHT_MODEL_COLOR_CONTROL: int = ...
GL_LIGHT_MODEL_LOCAL_VIEWER: int = ...
GL_LIGHT_MODEL_TWO_SIDE: int = ...
GL_LINE: int = ...
GL_LINEAR: int = ...
GL_LINEAR_ATTENUATION: int = ...
GL_LINEAR_MIPMAP_LINEAR: int = ...
GL_LINEAR_MIPMAP_NEAREST: int = ...
GL_LINES: int = ...
GL_LINES_ADJACENCY: int = ...
GL_LINE_BIT: int = ...
GL_LINE_LOOP: int = ...
GL_LINE_RESET_TOKEN: int = ...
GL_LINE_SMOOTH: int = ...
GL_LINE_SMOOTH_HINT: int = ...
GL_LINE_STIPPLE: int = ...
GL_LINE_STIPPLE_PATTERN: int = ...
GL_LINE_STIPPLE_REPEAT: int = ...
GL_LINE_STRIP: int = ...
GL_LINE_STRIP_ADJACENCY: int = ...
GL_LINE_TOKEN: int = ...
GL_LINE_WIDTH: int = ...
GL_LINE_WIDTH_GRANULARITY: int = ...
GL_LINE_WIDTH_RANGE: int = ...
GL_LINK_STATUS: int = ...
GL_LIST_BASE: int = ...
GL_LIST_BIT: int = ...
GL_LIST_INDEX: int = ...
GL_LIST_MODE: int = ...
GL_LOAD: int = ...
GL_LOCATION: int = ...
GL_LOCATION_COMPONENT: int = ...
GL_LOCATION_INDEX: int = ...
GL_LOGIC_OP: int = ...
GL_LOGIC_OP_MODE: int = ...
GL_LOSE_CONTEXT_ON_RESET: int = ...
GL_LOWER_LEFT: int = ...
GL_LOW_FLOAT: int = ...
GL_LOW_INT: int = ...
GL_LUMINANCE: int = ...
GL_LUMINANCE12: int = ...
GL_LUMINANCE12_ALPHA12: int = ...
GL_LUMINANCE12_ALPHA4: int = ...
GL_LUMINANCE16: int = ...
GL_LUMINANCE16_ALPHA16: int = ...
GL_LUMINANCE4: int = ...
GL_LUMINANCE4_ALPHA4: int = ...
GL_LUMINANCE6_ALPHA2: int = ...
GL_LUMINANCE8: int = ...
GL_LUMINANCE8_ALPHA8: int = ...
GL_LUMINANCE_ALPHA: int = ...
GL_MAJOR_VERSION: int = ...
GL_MANUAL_GENERATE_MIPMAP: int = ...
GL_MAP1_COLOR_4: int = ...
GL_MAP1_GRID_DOMAIN: int = ...
GL_MAP1_GRID_SEGMENTS: int = ...
GL_MAP1_INDEX: int = ...
GL_MAP1_NORMAL: int = ...
GL_MAP1_TEXTURE_COORD_1: int = ...
GL_MAP1_TEXTURE_COORD_2: int = ...
GL_MAP1_TEXTURE_COORD_3: int = ...
GL_MAP1_TEXTURE_COORD_4: int = ...
GL_MAP1_VERTEX_3: int = ...
GL_MAP1_VERTEX_4: int = ...
GL_MAP2_COLOR_4: int = ...
GL_MAP2_GRID_DOMAIN: int = ...
GL_MAP2_GRID_SEGMENTS: int = ...
GL_MAP2_INDEX: int = ...
GL_MAP2_NORMAL: int = ...
GL_MAP2_TEXTURE_COORD_1: int = ...
GL_MAP2_TEXTURE_COORD_2: int = ...
GL_MAP2_TEXTURE_COORD_3: int = ...
GL_MAP2_TEXTURE_COORD_4: int = ...
GL_MAP2_VERTEX_3: int = ...
GL_MAP2_VERTEX_4: int = ...
GL_MAP_COHERENT_BIT: int = ...
GL_MAP_COLOR: int = ...
GL_MAP_FLUSH_EXPLICIT_BIT: int = ...
GL_MAP_INVALIDATE_BUFFER_BIT: int = ...
GL_MAP_INVALIDATE_RANGE_BIT: int = ...
GL_MAP_PERSISTENT_BIT: int = ...
GL_MAP_READ_BIT: int = ...
GL_MAP_STENCIL: int = ...
GL_MAP_UNSYNCHRONIZED_BIT: int = ...
GL_MAP_WRITE_BIT: int = ...
GL_MATRIX_MODE: int = ...
GL_MATRIX_STRIDE: int = ...
GL_MAX: int = ...
GL_MAX_3D_TEXTURE_SIZE: int = ...
GL_MAX_ARRAY_TEXTURE_LAYERS: int = ...
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: int = ...
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: int = ...
GL_MAX_ATTRIB_STACK_DEPTH: int = ...
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH: int = ...
GL_MAX_CLIP_DISTANCES: int = ...
GL_MAX_CLIP_PLANES: int = ...
GL_MAX_COLOR_ATTACHMENTS: int = ...
GL_MAX_COLOR_MATRIX_STACK_DEPTH: int = ...
GL_MAX_COLOR_TEXTURE_SAMPLES: int = ...
GL_MAX_COMBINED_ATOMIC_COUNTERS: int = ...
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES: int = ...
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMBINED_DIMENSIONS: int = ...
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMBINED_IMAGE_UNIFORMS: int = ...
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: int = ...
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: int = ...
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_COMBINED_UNIFORM_BLOCKS: int = ...
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMPUTE_ATOMIC_COUNTERS: int = ...
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_COMPUTE_IMAGE_UNIFORMS: int = ...
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: int = ...
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_COMPUTE_UNIFORM_BLOCKS: int = ...
GL_MAX_COMPUTE_UNIFORM_COMPONENTS: int = ...
GL_MAX_COMPUTE_WORK_GROUP_COUNT: int = ...
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: int = ...
GL_MAX_COMPUTE_WORK_GROUP_SIZE: int = ...
GL_MAX_CONVOLUTION_HEIGHT: int = ...
GL_MAX_CONVOLUTION_WIDTH: int = ...
GL_MAX_CUBE_MAP_TEXTURE_SIZE: int = ...
GL_MAX_CULL_DISTANCES: int = ...
GL_MAX_DEBUG_GROUP_STACK_DEPTH: int = ...
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR: int = ...
GL_MAX_DEBUG_LOGGED_MESSAGES: int = ...
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR: int = ...
GL_MAX_DEBUG_MESSAGE_LENGTH: int = ...
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR: int = ...
GL_MAX_DEPTH: int = ...
GL_MAX_DEPTH_TEXTURE_SAMPLES: int = ...
GL_MAX_DRAW_BUFFERS: int = ...
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: int = ...
GL_MAX_ELEMENTS_INDICES: int = ...
GL_MAX_ELEMENTS_VERTICES: int = ...
GL_MAX_ELEMENT_INDEX: int = ...
GL_MAX_EVAL_ORDER: int = ...
GL_MAX_FRAGMENT_ATOMIC_COUNTERS: int = ...
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_FRAGMENT_IMAGE_UNIFORMS: int = ...
GL_MAX_FRAGMENT_INPUT_COMPONENTS: int = ...
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET: int = ...
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_FRAGMENT_UNIFORM_BLOCKS: int = ...
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: int = ...
GL_MAX_FRAGMENT_UNIFORM_VECTORS: int = ...
GL_MAX_FRAMEBUFFER_HEIGHT: int = ...
GL_MAX_FRAMEBUFFER_LAYERS: int = ...
GL_MAX_FRAMEBUFFER_SAMPLES: int = ...
GL_MAX_FRAMEBUFFER_WIDTH: int = ...
GL_MAX_GEOMETRY_ATOMIC_COUNTERS: int = ...
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_GEOMETRY_IMAGE_UNIFORMS: int = ...
GL_MAX_GEOMETRY_INPUT_COMPONENTS: int = ...
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS: int = ...
GL_MAX_GEOMETRY_OUTPUT_VERTICES: int = ...
GL_MAX_GEOMETRY_SHADER_INVOCATIONS: int = ...
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: int = ...
GL_MAX_GEOMETRY_UNIFORM_BLOCKS: int = ...
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS: int = ...
GL_MAX_HEIGHT: int = ...
GL_MAX_IMAGE_SAMPLES: int = ...
GL_MAX_IMAGE_UNITS: int = ...
GL_MAX_INTEGER_SAMPLES: int = ...
GL_MAX_LABEL_LENGTH: int = ...
GL_MAX_LABEL_LENGTH_KHR: int = ...
GL_MAX_LAYERS: int = ...
GL_MAX_LIGHTS: int = ...
GL_MAX_LIST_NESTING: int = ...
GL_MAX_MODELVIEW_STACK_DEPTH: int = ...
GL_MAX_NAME_LENGTH: int = ...
GL_MAX_NAME_STACK_DEPTH: int = ...
GL_MAX_NUM_ACTIVE_VARIABLES: int = ...
GL_MAX_NUM_COMPATIBLE_SUBROUTINES: int = ...
GL_MAX_PATCH_VERTICES: int = ...
GL_MAX_PIXEL_MAP_TABLE: int = ...
GL_MAX_PROGRAM_TEXEL_OFFSET: int = ...
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET: int = ...
GL_MAX_PROJECTION_STACK_DEPTH: int = ...
GL_MAX_RECTANGLE_TEXTURE_SIZE: int = ...
GL_MAX_RENDERBUFFER_SIZE: int = ...
GL_MAX_SAMPLES: int = ...
GL_MAX_SAMPLE_MASK_WORDS: int = ...
GL_MAX_SERVER_WAIT_TIMEOUT: int = ...
GL_MAX_SHADER_STORAGE_BLOCK_SIZE: int = ...
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: int = ...
GL_MAX_SUBROUTINES: int = ...
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS: int = ...
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS: int = ...
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS: int = ...
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS: int = ...
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS: int = ...
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: int = ...
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS: int = ...
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS: int = ...
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS: int = ...
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS: int = ...
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS: int = ...
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: int = ...
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS: int = ...
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: int = ...
GL_MAX_TESS_GEN_LEVEL: int = ...
GL_MAX_TESS_PATCH_COMPONENTS: int = ...
GL_MAX_TEXTURE_BUFFER_SIZE: int = ...
GL_MAX_TEXTURE_COORDS: int = ...
GL_MAX_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_TEXTURE_LOD_BIAS: int = ...
GL_MAX_TEXTURE_MAX_ANISOTROPY: int = ...
GL_MAX_TEXTURE_SIZE: int = ...
GL_MAX_TEXTURE_STACK_DEPTH: int = ...
GL_MAX_TEXTURE_UNITS: int = ...
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS: int = ...
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: int = ...
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: int = ...
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: int = ...
GL_MAX_UNIFORM_BLOCK_SIZE: int = ...
GL_MAX_UNIFORM_BUFFER_BINDINGS: int = ...
GL_MAX_UNIFORM_LOCATIONS: int = ...
GL_MAX_VARYING_COMPONENTS: int = ...
GL_MAX_VARYING_FLOATS: int = ...
GL_MAX_VARYING_VECTORS: int = ...
GL_MAX_VERTEX_ATOMIC_COUNTERS: int = ...
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: int = ...
GL_MAX_VERTEX_ATTRIBS: int = ...
GL_MAX_VERTEX_ATTRIB_BINDINGS: int = ...
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: int = ...
GL_MAX_VERTEX_ATTRIB_STRIDE: int = ...
GL_MAX_VERTEX_IMAGE_UNIFORMS: int = ...
GL_MAX_VERTEX_OUTPUT_COMPONENTS: int = ...
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: int = ...
GL_MAX_VERTEX_STREAMS: int = ...
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: int = ...
GL_MAX_VERTEX_UNIFORM_BLOCKS: int = ...
GL_MAX_VERTEX_UNIFORM_COMPONENTS: int = ...
GL_MAX_VERTEX_UNIFORM_VECTORS: int = ...
GL_MAX_VIEWPORTS: int = ...
GL_MAX_VIEWPORT_DIMS: int = ...
GL_MAX_WIDTH: int = ...
GL_MEDIUM_FLOAT: int = ...
GL_MEDIUM_INT: int = ...
GL_MIN: int = ...
GL_MINMAX: int = ...
GL_MINMAX_FORMAT: int = ...
GL_MINMAX_SINK: int = ...
GL_MINOR_VERSION: int = ...
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET: int = ...
GL_MIN_MAP_BUFFER_ALIGNMENT: int = ...
GL_MIN_PROGRAM_TEXEL_OFFSET: int = ...
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET: int = ...
GL_MIN_SAMPLE_SHADING_VALUE: int = ...
GL_MIPMAP: int = ...
GL_MIRRORED_REPEAT: int = ...
GL_MIRROR_CLAMP_TO_EDGE: int = ...
GL_MODELVIEW: int = ...
GL_MODELVIEW0_EXT: int = ...
GL_MODELVIEW0_MATRIX_EXT: int = ...
GL_MODELVIEW0_STACK_DEPTH_EXT: int = ...
GL_MODELVIEW_MATRIX: int = ...
GL_MODELVIEW_STACK_DEPTH: int = ...
GL_MODULATE: int = ...
GL_MULT: int = ...
GL_MULTISAMPLE: int = ...
GL_MULTISAMPLE_BIT: int = ...
GL_N3F_V3F: int = ...
GL_NAME_LENGTH: int = ...
GL_NAME_STACK_DEPTH: int = ...
GL_NAND: int = ...
GL_NEAREST: int = ...
GL_NEAREST_MIPMAP_LINEAR: int = ...
GL_NEAREST_MIPMAP_NEAREST: int = ...
GL_NEGATIVE_ONE_TO_ONE: int = ...
GL_NEVER: int = ...
GL_NICEST: int = ...
GL_NONE: int = ...
GL_NOOP: int = ...
GL_NOR: int = ...
GL_NORMALIZE: int = ...
GL_NORMAL_ARRAY: int = ...
GL_NORMAL_ARRAY_BUFFER_BINDING: int = ...
GL_NORMAL_ARRAY_POINTER: int = ...
GL_NORMAL_ARRAY_STRIDE: int = ...
GL_NORMAL_ARRAY_TYPE: int = ...
GL_NORMAL_MAP: int = ...
GL_NOTEQUAL: int = ...
GL_NO_ERROR: int = ...
GL_NO_RESET_NOTIFICATION: int = ...
GL_NUM_ACTIVE_VARIABLES: int = ...
GL_NUM_COMPATIBLE_SUBROUTINES: int = ...
GL_NUM_COMPRESSED_TEXTURE_FORMATS: int = ...
GL_NUM_EXTENSIONS: int = ...
GL_NUM_PROGRAM_BINARY_FORMATS: int = ...
GL_NUM_SAMPLE_COUNTS: int = ...
GL_NUM_SHADER_BINARY_FORMATS: int = ...
GL_NUM_SHADING_LANGUAGE_VERSIONS: int = ...
GL_NUM_SPIR_V_EXTENSIONS: int = ...
GL_OBJECT_ACTIVE_UNIFORMS: int = ...
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH: int = ...
GL_OBJECT_COMPILE_STATUS: int = ...
GL_OBJECT_LINEAR: int = ...
GL_OBJECT_LINK_STATUS: int = ...
GL_OBJECT_PLANE: int = ...
GL_OBJECT_TYPE: int = ...
GL_OFFSET: int = ...
GL_ONE: int = ...
GL_ONE_MINUS_CONSTANT_ALPHA: int = ...
GL_ONE_MINUS_CONSTANT_COLOR: int = ...
GL_ONE_MINUS_DST_ALPHA: int = ...
GL_ONE_MINUS_DST_COLOR: int = ...
GL_ONE_MINUS_SRC1_ALPHA: int = ...
GL_ONE_MINUS_SRC1_COLOR: int = ...
GL_ONE_MINUS_SRC_ALPHA: int = ...
GL_ONE_MINUS_SRC_COLOR: int = ...
GL_OPERAND0_ALPHA: int = ...
GL_OPERAND0_RGB: int = ...
GL_OPERAND1_ALPHA: int = ...
GL_OPERAND1_RGB: int = ...
GL_OPERAND2_ALPHA: int = ...
GL_OPERAND2_RGB: int = ...
GL_OR: int = ...
GL_ORDER: int = ...
GL_OR_INVERTED: int = ...
GL_OR_REVERSE: int = ...
GL_OUT_OF_MEMORY: int = ...
GL_PACK_ALIGNMENT: int = ...
GL_PACK_COMPRESSED_BLOCK_DEPTH: int = ...
GL_PACK_COMPRESSED_BLOCK_HEIGHT: int = ...
GL_PACK_COMPRESSED_BLOCK_SIZE: int = ...
GL_PACK_COMPRESSED_BLOCK_WIDTH: int = ...
GL_PACK_IMAGE_HEIGHT: int = ...
GL_PACK_LSB_FIRST: int = ...
GL_PACK_ROW_LENGTH: int = ...
GL_PACK_SKIP_IMAGES: int = ...
GL_PACK_SKIP_PIXELS: int = ...
GL_PACK_SKIP_ROWS: int = ...
GL_PACK_SWAP_BYTES: int = ...
GL_PARAMETER_BUFFER: int = ...
GL_PARAMETER_BUFFER_BINDING: int = ...
GL_PASS_THROUGH_TOKEN: int = ...
GL_PATCHES: int = ...
GL_PATCH_DEFAULT_INNER_LEVEL: int = ...
GL_PATCH_DEFAULT_OUTER_LEVEL: int = ...
GL_PATCH_VERTICES: int = ...
GL_PERSPECTIVE_CORRECTION_HINT: int = ...
GL_PIXEL_BUFFER_BARRIER_BIT: int = ...
GL_PIXEL_MAP_A_TO_A: int = ...
GL_PIXEL_MAP_A_TO_A_SIZE: int = ...
GL_PIXEL_MAP_B_TO_B: int = ...
GL_PIXEL_MAP_B_TO_B_SIZE: int = ...
GL_PIXEL_MAP_G_TO_G: int = ...
GL_PIXEL_MAP_G_TO_G_SIZE: int = ...
GL_PIXEL_MAP_I_TO_A: int = ...
GL_PIXEL_MAP_I_TO_A_SIZE: int = ...
GL_PIXEL_MAP_I_TO_B: int = ...
GL_PIXEL_MAP_I_TO_B_SIZE: int = ...
GL_PIXEL_MAP_I_TO_G: int = ...
GL_PIXEL_MAP_I_TO_G_SIZE: int = ...
GL_PIXEL_MAP_I_TO_I: int = ...
GL_PIXEL_MAP_I_TO_I_SIZE: int = ...
GL_PIXEL_MAP_I_TO_R: int = ...
GL_PIXEL_MAP_I_TO_R_SIZE: int = ...
GL_PIXEL_MAP_R_TO_R: int = ...
GL_PIXEL_MAP_R_TO_R_SIZE: int = ...
GL_PIXEL_MAP_S_TO_S: int = ...
GL_PIXEL_MAP_S_TO_S_SIZE: int = ...
GL_PIXEL_MODE_BIT: int = ...
GL_PIXEL_PACK_BUFFER: int = ...
GL_PIXEL_PACK_BUFFER_BINDING: int = ...
GL_PIXEL_UNPACK_BUFFER: int = ...
GL_PIXEL_UNPACK_BUFFER_BINDING: int = ...
GL_POINT: int = ...
GL_POINTS: int = ...
GL_POINT_BIT: int = ...
GL_POINT_DISTANCE_ATTENUATION: int = ...
GL_POINT_FADE_THRESHOLD_SIZE: int = ...
GL_POINT_SIZE: int = ...
GL_POINT_SIZE_GRANULARITY: int = ...
GL_POINT_SIZE_MAX: int = ...
GL_POINT_SIZE_MIN: int = ...
GL_POINT_SIZE_RANGE: int = ...
GL_POINT_SMOOTH: int = ...
GL_POINT_SMOOTH_HINT: int = ...
GL_POINT_SPRITE: int = ...
GL_POINT_SPRITE_COORD_ORIGIN: int = ...
GL_POINT_TOKEN: int = ...
GL_POLYGON: int = ...
GL_POLYGON_BIT: int = ...
GL_POLYGON_MODE: int = ...
GL_POLYGON_OFFSET_CLAMP: int = ...
GL_POLYGON_OFFSET_FACTOR: int = ...
GL_POLYGON_OFFSET_FILL: int = ...
GL_POLYGON_OFFSET_LINE: int = ...
GL_POLYGON_OFFSET_POINT: int = ...
GL_POLYGON_OFFSET_UNITS: int = ...
GL_POLYGON_SMOOTH: int = ...
GL_POLYGON_SMOOTH_HINT: int = ...
GL_POLYGON_STIPPLE: int = ...
GL_POLYGON_STIPPLE_BIT: int = ...
GL_POLYGON_TOKEN: int = ...
GL_POSITION: int = ...
GL_POST_COLOR_MATRIX_ALPHA_BIAS: int = ...
GL_POST_COLOR_MATRIX_ALPHA_SCALE: int = ...
GL_POST_COLOR_MATRIX_BLUE_BIAS: int = ...
GL_POST_COLOR_MATRIX_BLUE_SCALE: int = ...
GL_POST_COLOR_MATRIX_COLOR_TABLE: int = ...
GL_POST_COLOR_MATRIX_GREEN_BIAS: int = ...
GL_POST_COLOR_MATRIX_GREEN_SCALE: int = ...
GL_POST_COLOR_MATRIX_RED_BIAS: int = ...
GL_POST_COLOR_MATRIX_RED_SCALE: int = ...
GL_POST_CONVOLUTION_ALPHA_BIAS: int = ...
GL_POST_CONVOLUTION_ALPHA_SCALE: int = ...
GL_POST_CONVOLUTION_BLUE_BIAS: int = ...
GL_POST_CONVOLUTION_BLUE_SCALE: int = ...
GL_POST_CONVOLUTION_COLOR_TABLE: int = ...
GL_POST_CONVOLUTION_GREEN_BIAS: int = ...
GL_POST_CONVOLUTION_GREEN_SCALE: int = ...
GL_POST_CONVOLUTION_RED_BIAS: int = ...
GL_POST_CONVOLUTION_RED_SCALE: int = ...
GL_PREVIOUS: int = ...
GL_PRIMARY_COLOR: int = ...
GL_PRIMITIVES_GENERATED: int = ...
GL_PRIMITIVES_SUBMITTED: int = ...
GL_PRIMITIVE_RESTART: int = ...
GL_PRIMITIVE_RESTART_FIXED_INDEX: int = ...
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED: int = ...
GL_PRIMITIVE_RESTART_INDEX: int = ...
GL_PROGRAM: int = ...
GL_PROGRAM_BINARY_FORMATS: int = ...
GL_PROGRAM_BINARY_LENGTH: int = ...
GL_PROGRAM_BINARY_RETRIEVABLE_HINT: int = ...
GL_PROGRAM_INPUT: int = ...
GL_PROGRAM_KHR: int = ...
GL_PROGRAM_OUTPUT: int = ...
GL_PROGRAM_PIPELINE: int = ...
GL_PROGRAM_PIPELINE_BINDING: int = ...
GL_PROGRAM_PIPELINE_KHR: int = ...
GL_PROGRAM_POINT_SIZE: int = ...
GL_PROGRAM_SEPARABLE: int = ...
GL_PROJECTION: int = ...
GL_PROJECTION_MATRIX: int = ...
GL_PROJECTION_STACK_DEPTH: int = ...
GL_PROVOKING_VERTEX: int = ...
GL_PROXY_COLOR_TABLE: int = ...
GL_PROXY_HISTOGRAM: int = ...
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE: int = ...
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE: int = ...
GL_PROXY_TEXTURE_1D: int = ...
GL_PROXY_TEXTURE_1D_ARRAY: int = ...
GL_PROXY_TEXTURE_2D: int = ...
GL_PROXY_TEXTURE_2D_ARRAY: int = ...
GL_PROXY_TEXTURE_2D_MULTISAMPLE: int = ...
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: int = ...
GL_PROXY_TEXTURE_3D: int = ...
GL_PROXY_TEXTURE_CUBE_MAP: int = ...
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY: int = ...
GL_PROXY_TEXTURE_RECTANGLE: int = ...
GL_Q: int = ...
GL_QUADRATIC_ATTENUATION: int = ...
GL_QUADS: int = ...
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: int = ...
GL_QUAD_STRIP: int = ...
GL_QUERY: int = ...
GL_QUERY_BUFFER: int = ...
GL_QUERY_BUFFER_BARRIER_BIT: int = ...
GL_QUERY_BUFFER_BINDING: int = ...
GL_QUERY_BY_REGION_NO_WAIT: int = ...
GL_QUERY_BY_REGION_NO_WAIT_INVERTED: int = ...
GL_QUERY_BY_REGION_WAIT: int = ...
GL_QUERY_BY_REGION_WAIT_INVERTED: int = ...
GL_QUERY_COUNTER_BITS: int = ...
GL_QUERY_KHR: int = ...
GL_QUERY_NO_WAIT: int = ...
GL_QUERY_NO_WAIT_INVERTED: int = ...
GL_QUERY_RESULT: int = ...
GL_QUERY_RESULT_AVAILABLE: int = ...
GL_QUERY_RESULT_NO_WAIT: int = ...
GL_QUERY_TARGET: int = ...
GL_QUERY_WAIT: int = ...
GL_QUERY_WAIT_INVERTED: int = ...
GL_R: int = ...
GL_R11F_G11F_B10F: int = ...
GL_R16: int = ...
GL_R16F: int = ...
GL_R16I: int = ...
GL_R16UI: int = ...
GL_R16_SNORM: int = ...
GL_R32F: int = ...
GL_R32I: int = ...
GL_R32UI: int = ...
GL_R3_G3_B2: int = ...
GL_R8: int = ...
GL_R8I: int = ...
GL_R8UI: int = ...
GL_R8_SNORM: int = ...
GL_RASTERIZER_DISCARD: int = ...
GL_READ_BUFFER: int = ...
GL_READ_FRAMEBUFFER: int = ...
GL_READ_FRAMEBUFFER_BINDING: int = ...
GL_READ_ONLY: int = ...
GL_READ_PIXELS: int = ...
GL_READ_PIXELS_FORMAT: int = ...
GL_READ_PIXELS_TYPE: int = ...
GL_READ_WRITE: int = ...
GL_RED: int = ...
GL_REDUCE: int = ...
GL_RED_BIAS: int = ...
GL_RED_BITS: int = ...
GL_RED_INTEGER: int = ...
GL_RED_SCALE: int = ...
GL_REFERENCED_BY_COMPUTE_SHADER: int = ...
GL_REFERENCED_BY_FRAGMENT_SHADER: int = ...
GL_REFERENCED_BY_GEOMETRY_SHADER: int = ...
GL_REFERENCED_BY_TESS_CONTROL_SHADER: int = ...
GL_REFERENCED_BY_TESS_EVALUATION_SHADER: int = ...
GL_REFERENCED_BY_VERTEX_SHADER: int = ...
GL_REFLECTION_MAP: int = ...
GL_RENDER: int = ...
GL_RENDERBUFFER: int = ...
GL_RENDERBUFFER_ALPHA_SIZE: int = ...
GL_RENDERBUFFER_BINDING: int = ...
GL_RENDERBUFFER_BLUE_SIZE: int = ...
GL_RENDERBUFFER_DEPTH_SIZE: int = ...
GL_RENDERBUFFER_GREEN_SIZE: int = ...
GL_RENDERBUFFER_HEIGHT: int = ...
GL_RENDERBUFFER_INTERNAL_FORMAT: int = ...
GL_RENDERBUFFER_RED_SIZE: int = ...
GL_RENDERBUFFER_SAMPLES: int = ...
GL_RENDERBUFFER_STENCIL_SIZE: int = ...
GL_RENDERBUFFER_WIDTH: int = ...
GL_RENDERER: int = ...
GL_RENDER_MODE: int = ...
GL_REPEAT: int = ...
GL_REPLACE: int = ...
GL_REPLICATE_BORDER: int = ...
GL_RESCALE_NORMAL: int = ...
GL_RESET_NOTIFICATION_STRATEGY: int = ...
GL_RETURN: int = ...
GL_RG: int = ...
GL_RG16: int = ...
GL_RG16F: int = ...
GL_RG16I: int = ...
GL_RG16UI: int = ...
GL_RG16_SNORM: int = ...
GL_RG32F: int = ...
GL_RG32I: int = ...
GL_RG32UI: int = ...
GL_RG8: int = ...
GL_RG8I: int = ...
GL_RG8UI: int = ...
GL_RG8_SNORM: int = ...
GL_RGB: int = ...
GL_RGB10: int = ...
GL_RGB10_A2: int = ...
GL_RGB10_A2UI: int = ...
GL_RGB12: int = ...
GL_RGB16: int = ...
GL_RGB16F: int = ...
GL_RGB16I: int = ...
GL_RGB16UI: int = ...
GL_RGB16_SNORM: int = ...
GL_RGB32F: int = ...
GL_RGB32I: int = ...
GL_RGB32UI: int = ...
GL_RGB4: int = ...
GL_RGB5: int = ...
GL_RGB565: int = ...
GL_RGB5_A1: int = ...
GL_RGB8: int = ...
GL_RGB8I: int = ...
GL_RGB8UI: int = ...
GL_RGB8_SNORM: int = ...
GL_RGB9_E5: int = ...
GL_RGBA: int = ...
GL_RGBA12: int = ...
GL_RGBA16: int = ...
GL_RGBA16F: int = ...
GL_RGBA16I: int = ...
GL_RGBA16UI: int = ...
GL_RGBA16_SNORM: int = ...
GL_RGBA2: int = ...
GL_RGBA32F: int = ...
GL_RGBA32I: int = ...
GL_RGBA32UI: int = ...
GL_RGBA4: int = ...
GL_RGBA8: int = ...
GL_RGBA8I: int = ...
GL_RGBA8UI: int = ...
GL_RGBA8_SNORM: int = ...
GL_RGBA_INTEGER: int = ...
GL_RGBA_MODE: int = ...
GL_RGB_INTEGER: int = ...
GL_RGB_SCALE: int = ...
GL_RG_INTEGER: int = ...
GL_RIGHT: int = ...
GL_S: int = ...
GL_SAMPLER: int = ...
GL_SAMPLER_1D: int = ...
GL_SAMPLER_1D_ARRAY: int = ...
GL_SAMPLER_1D_ARRAY_SHADOW: int = ...
GL_SAMPLER_1D_SHADOW: int = ...
GL_SAMPLER_2D: int = ...
GL_SAMPLER_2D_ARRAY: int = ...
GL_SAMPLER_2D_ARRAY_SHADOW: int = ...
GL_SAMPLER_2D_MULTISAMPLE: int = ...
GL_SAMPLER_2D_MULTISAMPLE_ARRAY: int = ...
GL_SAMPLER_2D_RECT: int = ...
GL_SAMPLER_2D_RECT_SHADOW: int = ...
GL_SAMPLER_2D_SHADOW: int = ...
GL_SAMPLER_3D: int = ...
GL_SAMPLER_BINDING: int = ...
GL_SAMPLER_BUFFER: int = ...
GL_SAMPLER_CUBE: int = ...
GL_SAMPLER_CUBE_MAP_ARRAY: int = ...
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW: int = ...
GL_SAMPLER_CUBE_SHADOW: int = ...
GL_SAMPLER_KHR: int = ...
GL_SAMPLES: int = ...
GL_SAMPLES_PASSED: int = ...
GL_SAMPLE_ALPHA_TO_COVERAGE: int = ...
GL_SAMPLE_ALPHA_TO_ONE: int = ...
GL_SAMPLE_BUFFERS: int = ...
GL_SAMPLE_COVERAGE: int = ...
GL_SAMPLE_COVERAGE_INVERT: int = ...
GL_SAMPLE_COVERAGE_VALUE: int = ...
GL_SAMPLE_MASK: int = ...
GL_SAMPLE_MASK_VALUE: int = ...
GL_SAMPLE_POSITION: int = ...
GL_SAMPLE_SHADING: int = ...
GL_SCISSOR_BIT: int = ...
GL_SCISSOR_BOX: int = ...
GL_SCISSOR_TEST: int = ...
GL_SECONDARY_COLOR_ARRAY: int = ...
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING: int = ...
GL_SECONDARY_COLOR_ARRAY_POINTER: int = ...
GL_SECONDARY_COLOR_ARRAY_SIZE: int = ...
GL_SECONDARY_COLOR_ARRAY_STRIDE: int = ...
GL_SECONDARY_COLOR_ARRAY_TYPE: int = ...
GL_SELECT: int = ...
GL_SELECTION_BUFFER_POINTER: int = ...
GL_SELECTION_BUFFER_SIZE: int = ...
GL_SEPARABLE_2D: int = ...
GL_SEPARATE_ATTRIBS: int = ...
GL_SEPARATE_SPECULAR_COLOR: int = ...
GL_SET: int = ...
GL_SHADER: int = ...
GL_SHADER_BINARY_FORMATS: int = ...
GL_SHADER_BINARY_FORMAT_SPIR_V: int = ...
GL_SHADER_COMPILER: int = ...
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT: int = ...
GL_SHADER_IMAGE_ATOMIC: int = ...
GL_SHADER_IMAGE_LOAD: int = ...
GL_SHADER_IMAGE_STORE: int = ...
GL_SHADER_KHR: int = ...
GL_SHADER_SOURCE_LENGTH: int = ...
GL_SHADER_STORAGE_BARRIER_BIT: int = ...
GL_SHADER_STORAGE_BLOCK: int = ...
GL_SHADER_STORAGE_BUFFER: int = ...
GL_SHADER_STORAGE_BUFFER_BINDING: int = ...
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: int = ...
GL_SHADER_STORAGE_BUFFER_SIZE: int = ...
GL_SHADER_STORAGE_BUFFER_START: int = ...
GL_SHADER_TYPE: int = ...
GL_SHADE_MODEL: int = ...
GL_SHADING_LANGUAGE_VERSION: int = ...
GL_SHININESS: int = ...
GL_SHORT: int = ...
GL_SIGNALED: int = ...
GL_SIGNED_NORMALIZED: int = ...
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: int = ...
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: int = ...
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: int = ...
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: int = ...
GL_SINGLE_COLOR: int = ...
GL_SLUMINANCE: int = ...
GL_SLUMINANCE8: int = ...
GL_SLUMINANCE8_ALPHA8: int = ...
GL_SLUMINANCE_ALPHA: int = ...
GL_SMOOTH: int = ...
GL_SMOOTH_LINE_WIDTH_GRANULARITY: int = ...
GL_SMOOTH_LINE_WIDTH_RANGE: int = ...
GL_SMOOTH_POINT_SIZE_GRANULARITY: int = ...
GL_SMOOTH_POINT_SIZE_RANGE: int = ...
GL_SOURCE0_ALPHA: int = ...
GL_SOURCE0_RGB: int = ...
GL_SOURCE1_ALPHA: int = ...
GL_SOURCE1_RGB: int = ...
GL_SOURCE2_ALPHA: int = ...
GL_SOURCE2_RGB: int = ...
GL_SPECULAR: int = ...
GL_SPHERE_MAP: int = ...
GL_SPIR_V_BINARY: int = ...
GL_SPIR_V_EXTENSIONS: int = ...
GL_SPOT_CUTOFF: int = ...
GL_SPOT_DIRECTION: int = ...
GL_SPOT_EXPONENT: int = ...
GL_SRC0_ALPHA: int = ...
GL_SRC0_RGB: int = ...
GL_SRC1_ALPHA: int = ...
GL_SRC1_COLOR: int = ...
GL_SRC1_RGB: int = ...
GL_SRC2_ALPHA: int = ...
GL_SRC2_RGB: int = ...
GL_SRC_ALPHA: int = ...
GL_SRC_ALPHA_SATURATE: int = ...
GL_SRC_COLOR: int = ...
GL_SRGB: int = ...
GL_SRGB8: int = ...
GL_SRGB8_ALPHA8: int = ...
GL_SRGB_ALPHA: int = ...
GL_SRGB_DECODE_ARB: int = ...
GL_SRGB_READ: int = ...
GL_SRGB_WRITE: int = ...
GL_STACK_OVERFLOW: int = ...
GL_STACK_OVERFLOW_KHR: int = ...
GL_STACK_UNDERFLOW: int = ...
GL_STACK_UNDERFLOW_KHR: int = ...
GL_STATIC_COPY: int = ...
GL_STATIC_DRAW: int = ...
GL_STATIC_READ: int = ...
GL_STENCIL: int = ...
GL_STENCIL_ATTACHMENT: int = ...
GL_STENCIL_BACK_FAIL: int = ...
GL_STENCIL_BACK_FUNC: int = ...
GL_STENCIL_BACK_PASS_DEPTH_FAIL: int = ...
GL_STENCIL_BACK_PASS_DEPTH_PASS: int = ...
GL_STENCIL_BACK_REF: int = ...
GL_STENCIL_BACK_VALUE_MASK: int = ...
GL_STENCIL_BACK_WRITEMASK: int = ...
GL_STENCIL_BITS: int = ...
GL_STENCIL_BUFFER: int = ...
GL_STENCIL_BUFFER_BIT: int = ...
GL_STENCIL_CLEAR_VALUE: int = ...
GL_STENCIL_COMPONENTS: int = ...
GL_STENCIL_FAIL: int = ...
GL_STENCIL_FUNC: int = ...
GL_STENCIL_INDEX: int = ...
GL_STENCIL_INDEX1: int = ...
GL_STENCIL_INDEX16: int = ...
GL_STENCIL_INDEX4: int = ...
GL_STENCIL_INDEX8: int = ...
GL_STENCIL_PASS_DEPTH_FAIL: int = ...
GL_STENCIL_PASS_DEPTH_PASS: int = ...
GL_STENCIL_REF: int = ...
GL_STENCIL_RENDERABLE: int = ...
GL_STENCIL_TEST: int = ...
GL_STENCIL_VALUE_MASK: int = ...
GL_STENCIL_WRITEMASK: int = ...
GL_STEREO: int = ...
GL_STREAM_COPY: int = ...
GL_STREAM_DRAW: int = ...
GL_STREAM_READ: int = ...
GL_SUBPIXEL_BITS: int = ...
GL_SUBTRACT: int = ...
GL_SYNC_CONDITION: int = ...
GL_SYNC_FENCE: int = ...
GL_SYNC_FLAGS: int = ...
GL_SYNC_FLUSH_COMMANDS_BIT: int = ...
GL_SYNC_GPU_COMMANDS_COMPLETE: int = ...
GL_SYNC_STATUS: int = ...
GL_T: int = ...
GL_T2F_C3F_V3F: int = ...
GL_T2F_C4F_N3F_V3F: int = ...
GL_T2F_C4UB_V3F: int = ...
GL_T2F_N3F_V3F: int = ...
GL_T2F_V3F: int = ...
GL_T4F_C4F_N3F_V4F: int = ...
GL_T4F_V4F: int = ...
GL_TABLE_TOO_LARGE: int = ...
GL_TESS_CONTROL_OUTPUT_VERTICES: int = ...
GL_TESS_CONTROL_SHADER: int = ...
GL_TESS_CONTROL_SHADER_BIT: int = ...
GL_TESS_CONTROL_SHADER_PATCHES: int = ...
GL_TESS_CONTROL_SUBROUTINE: int = ...
GL_TESS_CONTROL_SUBROUTINE_UNIFORM: int = ...
GL_TESS_CONTROL_TEXTURE: int = ...
GL_TESS_EVALUATION_SHADER: int = ...
GL_TESS_EVALUATION_SHADER_BIT: int = ...
GL_TESS_EVALUATION_SHADER_INVOCATIONS: int = ...
GL_TESS_EVALUATION_SUBROUTINE: int = ...
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM: int = ...
GL_TESS_EVALUATION_TEXTURE: int = ...
GL_TESS_GEN_MODE: int = ...
GL_TESS_GEN_POINT_MODE: int = ...
GL_TESS_GEN_SPACING: int = ...
GL_TESS_GEN_VERTEX_ORDER: int = ...
GL_TEXTURE: int = ...
GL_TEXTURE0: int = ...
GL_TEXTURE1: int = ...
GL_TEXTURE10: int = ...
GL_TEXTURE11: int = ...
GL_TEXTURE12: int = ...
GL_TEXTURE13: int = ...
GL_TEXTURE14: int = ...
GL_TEXTURE15: int = ...
GL_TEXTURE16: int = ...
GL_TEXTURE17: int = ...
GL_TEXTURE18: int = ...
GL_TEXTURE19: int = ...
GL_TEXTURE2: int = ...
GL_TEXTURE20: int = ...
GL_TEXTURE21: int = ...
GL_TEXTURE22: int = ...
GL_TEXTURE23: int = ...
GL_TEXTURE24: int = ...
GL_TEXTURE25: int = ...
GL_TEXTURE26: int = ...
GL_TEXTURE27: int = ...
GL_TEXTURE28: int = ...
GL_TEXTURE29: int = ...
GL_TEXTURE3: int = ...
GL_TEXTURE30: int = ...
GL_TEXTURE31: int = ...
GL_TEXTURE4: int = ...
GL_TEXTURE5: int = ...
GL_TEXTURE6: int = ...
GL_TEXTURE7: int = ...
GL_TEXTURE8: int = ...
GL_TEXTURE9: int = ...
GL_TEXTURE_1D: int = ...
GL_TEXTURE_1D_ARRAY: int = ...
GL_TEXTURE_2D: int = ...
GL_TEXTURE_2D_ARRAY: int = ...
GL_TEXTURE_2D_MULTISAMPLE: int = ...
GL_TEXTURE_2D_MULTISAMPLE_ARRAY: int = ...
GL_TEXTURE_3D: int = ...
GL_TEXTURE_ALPHA_SIZE: int = ...
GL_TEXTURE_ALPHA_TYPE: int = ...
GL_TEXTURE_BASE_LEVEL: int = ...
GL_TEXTURE_BINDING_1D: int = ...
GL_TEXTURE_BINDING_1D_ARRAY: int = ...
GL_TEXTURE_BINDING_2D: int = ...
GL_TEXTURE_BINDING_2D_ARRAY: int = ...
GL_TEXTURE_BINDING_2D_MULTISAMPLE: int = ...
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: int = ...
GL_TEXTURE_BINDING_3D: int = ...
GL_TEXTURE_BINDING_BUFFER: int = ...
GL_TEXTURE_BINDING_CUBE_MAP: int = ...
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY: int = ...
GL_TEXTURE_BINDING_RECTANGLE: int = ...
GL_TEXTURE_BIT: int = ...
GL_TEXTURE_BLUE_SIZE: int = ...
GL_TEXTURE_BLUE_TYPE: int = ...
GL_TEXTURE_BORDER: int = ...
GL_TEXTURE_BORDER_COLOR: int = ...
GL_TEXTURE_BUFFER: int = ...
GL_TEXTURE_BUFFER_BINDING: int = ...
GL_TEXTURE_BUFFER_DATA_STORE_BINDING: int = ...
GL_TEXTURE_BUFFER_OFFSET: int = ...
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT: int = ...
GL_TEXTURE_BUFFER_SIZE: int = ...
GL_TEXTURE_COMPARE_FUNC: int = ...
GL_TEXTURE_COMPARE_MODE: int = ...
GL_TEXTURE_COMPONENTS: int = ...
GL_TEXTURE_COMPRESSED: int = ...
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT: int = ...
GL_TEXTURE_COMPRESSED_BLOCK_SIZE: int = ...
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH: int = ...
GL_TEXTURE_COMPRESSED_IMAGE_SIZE: int = ...
GL_TEXTURE_COMPRESSION_HINT: int = ...
GL_TEXTURE_COORD_ARRAY: int = ...
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING: int = ...
GL_TEXTURE_COORD_ARRAY_POINTER: int = ...
GL_TEXTURE_COORD_ARRAY_SIZE: int = ...
GL_TEXTURE_COORD_ARRAY_STRIDE: int = ...
GL_TEXTURE_COORD_ARRAY_TYPE: int = ...
GL_TEXTURE_CUBE_MAP: int = ...
GL_TEXTURE_CUBE_MAP_ARRAY: int = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_X: int = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: int = ...
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: int = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_X: int = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_Y: int = ...
GL_TEXTURE_CUBE_MAP_POSITIVE_Z: int = ...
GL_TEXTURE_CUBE_MAP_SEAMLESS: int = ...
GL_TEXTURE_DEPTH: int = ...
GL_TEXTURE_DEPTH_SIZE: int = ...
GL_TEXTURE_DEPTH_TYPE: int = ...
GL_TEXTURE_ENV: int = ...
GL_TEXTURE_ENV_COLOR: int = ...
GL_TEXTURE_ENV_MODE: int = ...
GL_TEXTURE_FETCH_BARRIER_BIT: int = ...
GL_TEXTURE_FILTER_CONTROL: int = ...
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: int = ...
GL_TEXTURE_GATHER: int = ...
GL_TEXTURE_GATHER_SHADOW: int = ...
GL_TEXTURE_GEN_MODE: int = ...
GL_TEXTURE_GEN_Q: int = ...
GL_TEXTURE_GEN_R: int = ...
GL_TEXTURE_GEN_S: int = ...
GL_TEXTURE_GEN_T: int = ...
GL_TEXTURE_GREEN_SIZE: int = ...
GL_TEXTURE_GREEN_TYPE: int = ...
GL_TEXTURE_HEIGHT: int = ...
GL_TEXTURE_IMAGE_FORMAT: int = ...
GL_TEXTURE_IMAGE_TYPE: int = ...
GL_TEXTURE_IMMUTABLE_FORMAT: int = ...
GL_TEXTURE_IMMUTABLE_LEVELS: int = ...
GL_TEXTURE_INTENSITY_SIZE: int = ...
GL_TEXTURE_INTENSITY_TYPE: int = ...
GL_TEXTURE_INTERNAL_FORMAT: int = ...
GL_TEXTURE_LOD_BIAS: int = ...
GL_TEXTURE_LUMINANCE_SIZE: int = ...
GL_TEXTURE_LUMINANCE_TYPE: int = ...
GL_TEXTURE_MAG_FILTER: int = ...
GL_TEXTURE_MATRIX: int = ...
GL_TEXTURE_MAX_ANISOTROPY: int = ...
GL_TEXTURE_MAX_LEVEL: int = ...
GL_TEXTURE_MAX_LOD: int = ...
GL_TEXTURE_MIN_FILTER: int = ...
GL_TEXTURE_MIN_LOD: int = ...
GL_TEXTURE_PRIORITY: int = ...
GL_TEXTURE_RECTANGLE: int = ...
GL_TEXTURE_RED_SIZE: int = ...
GL_TEXTURE_RED_TYPE: int = ...
GL_TEXTURE_RESIDENT: int = ...
GL_TEXTURE_SAMPLES: int = ...
GL_TEXTURE_SHADOW: int = ...
GL_TEXTURE_SHARED_SIZE: int = ...
GL_TEXTURE_STACK_DEPTH: int = ...
GL_TEXTURE_STENCIL_SIZE: int = ...
GL_TEXTURE_SWIZZLE_A: int = ...
GL_TEXTURE_SWIZZLE_B: int = ...
GL_TEXTURE_SWIZZLE_G: int = ...
GL_TEXTURE_SWIZZLE_R: int = ...
GL_TEXTURE_SWIZZLE_RGBA: int = ...
GL_TEXTURE_TARGET: int = ...
GL_TEXTURE_UPDATE_BARRIER_BIT: int = ...
GL_TEXTURE_VIEW: int = ...
GL_TEXTURE_VIEW_MIN_LAYER: int = ...
GL_TEXTURE_VIEW_MIN_LEVEL: int = ...
GL_TEXTURE_VIEW_NUM_LAYERS: int = ...
GL_TEXTURE_VIEW_NUM_LEVELS: int = ...
GL_TEXTURE_WIDTH: int = ...
GL_TEXTURE_WRAP_R: int = ...
GL_TEXTURE_WRAP_S: int = ...
GL_TEXTURE_WRAP_T: int = ...
GL_TIMEOUT_EXPIRED: int = ...
GL_TIMEOUT_IGNORED: int = ...
GL_TIMESTAMP: int = ...
GL_TIME_ELAPSED: int = ...
GL_TOP_LEVEL_ARRAY_SIZE: int = ...
GL_TOP_LEVEL_ARRAY_STRIDE: int = ...
GL_TRANSFORM_BIT: int = ...
GL_TRANSFORM_FEEDBACK: int = ...
GL_TRANSFORM_FEEDBACK_ACTIVE: int = ...
GL_TRANSFORM_FEEDBACK_BARRIER_BIT: int = ...
GL_TRANSFORM_FEEDBACK_BINDING: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_MODE: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_START: int = ...
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE: int = ...
GL_TRANSFORM_FEEDBACK_OVERFLOW: int = ...
GL_TRANSFORM_FEEDBACK_PAUSED: int = ...
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: int = ...
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW: int = ...
GL_TRANSFORM_FEEDBACK_VARYING: int = ...
GL_TRANSFORM_FEEDBACK_VARYINGS: int = ...
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: int = ...
GL_TRANSPOSE_COLOR_MATRIX: int = ...
GL_TRANSPOSE_MODELVIEW_MATRIX: int = ...
GL_TRANSPOSE_PROJECTION_MATRIX: int = ...
GL_TRANSPOSE_TEXTURE_MATRIX: int = ...
GL_TRIANGLES: int = ...
GL_TRIANGLES_ADJACENCY: int = ...
GL_TRIANGLE_FAN: int = ...
GL_TRIANGLE_STRIP: int = ...
GL_TRIANGLE_STRIP_ADJACENCY: int = ...
GL_TRUE: int = ...
GL_TYPE: int = ...
GL_UNDEFINED_VERTEX: int = ...
GL_UNIFORM: int = ...
GL_UNIFORM_ARRAY_STRIDE: int = ...
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: int = ...
GL_UNIFORM_BARRIER_BIT: int = ...
GL_UNIFORM_BLOCK: int = ...
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: int = ...
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: int = ...
GL_UNIFORM_BLOCK_BINDING: int = ...
GL_UNIFORM_BLOCK_DATA_SIZE: int = ...
GL_UNIFORM_BLOCK_INDEX: int = ...
GL_UNIFORM_BLOCK_NAME_LENGTH: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: int = ...
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: int = ...
GL_UNIFORM_BUFFER: int = ...
GL_UNIFORM_BUFFER_BINDING: int = ...
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: int = ...
GL_UNIFORM_BUFFER_SIZE: int = ...
GL_UNIFORM_BUFFER_START: int = ...
GL_UNIFORM_IS_ROW_MAJOR: int = ...
GL_UNIFORM_MATRIX_STRIDE: int = ...
GL_UNIFORM_NAME_LENGTH: int = ...
GL_UNIFORM_OFFSET: int = ...
GL_UNIFORM_SIZE: int = ...
GL_UNIFORM_TYPE: int = ...
GL_UNKNOWN_CONTEXT_RESET: int = ...
GL_UNPACK_ALIGNMENT: int = ...
GL_UNPACK_COMPRESSED_BLOCK_DEPTH: int = ...
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: int = ...
GL_UNPACK_COMPRESSED_BLOCK_SIZE: int = ...
GL_UNPACK_COMPRESSED_BLOCK_WIDTH: int = ...
GL_UNPACK_IMAGE_HEIGHT: int = ...
GL_UNPACK_LSB_FIRST: int = ...
GL_UNPACK_ROW_LENGTH: int = ...
GL_UNPACK_SKIP_IMAGES: int = ...
GL_UNPACK_SKIP_PIXELS: int = ...
GL_UNPACK_SKIP_ROWS: int = ...
GL_UNPACK_SWAP_BYTES: int = ...
GL_UNSIGNALED: int = ...
GL_UNSIGNED_BYTE: int = ...
GL_UNSIGNED_BYTE_2_3_3_REV: int = ...
GL_UNSIGNED_BYTE_3_3_2: int = ...
GL_UNSIGNED_INT: int = ...
GL_UNSIGNED_INT64: int = ...
GL_UNSIGNED_INT_10F_11F_11F_REV: int = ...
GL_UNSIGNED_INT_10_10_10_2: int = ...
GL_UNSIGNED_INT_24_8: int = ...
GL_UNSIGNED_INT_2_10_10_10_REV: int = ...
GL_UNSIGNED_INT_5_9_9_9_REV: int = ...
GL_UNSIGNED_INT_8_8_8_8: int = ...
GL_UNSIGNED_INT_8_8_8_8_REV: int = ...
GL_UNSIGNED_INT_ATOMIC_COUNTER: int = ...
GL_UNSIGNED_INT_IMAGE_1D: int = ...
GL_UNSIGNED_INT_IMAGE_1D_ARRAY: int = ...
GL_UNSIGNED_INT_IMAGE_2D: int = ...
GL_UNSIGNED_INT_IMAGE_2D_ARRAY: int = ...
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: int = ...
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int = ...
GL_UNSIGNED_INT_IMAGE_2D_RECT: int = ...
GL_UNSIGNED_INT_IMAGE_3D: int = ...
GL_UNSIGNED_INT_IMAGE_BUFFER: int = ...
GL_UNSIGNED_INT_IMAGE_CUBE: int = ...
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: int = ...
GL_UNSIGNED_INT_SAMPLER_1D: int = ...
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY: int = ...
GL_UNSIGNED_INT_SAMPLER_2D: int = ...
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: int = ...
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: int = ...
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int = ...
GL_UNSIGNED_INT_SAMPLER_2D_RECT: int = ...
GL_UNSIGNED_INT_SAMPLER_3D: int = ...
GL_UNSIGNED_INT_SAMPLER_BUFFER: int = ...
GL_UNSIGNED_INT_SAMPLER_CUBE: int = ...
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY: int = ...
GL_UNSIGNED_INT_VEC2: int = ...
GL_UNSIGNED_INT_VEC3: int = ...
GL_UNSIGNED_INT_VEC4: int = ...
GL_UNSIGNED_NORMALIZED: int = ...
GL_UNSIGNED_SHORT: int = ...
GL_UNSIGNED_SHORT_1_5_5_5_REV: int = ...
GL_UNSIGNED_SHORT_4_4_4_4: int = ...
GL_UNSIGNED_SHORT_4_4_4_4_REV: int = ...
GL_UNSIGNED_SHORT_5_5_5_1: int = ...
GL_UNSIGNED_SHORT_5_6_5: int = ...
GL_UNSIGNED_SHORT_5_6_5_REV: int = ...
GL_UPPER_LEFT: int = ...
GL_V2F: int = ...
GL_V3F: int = ...
GL_VALIDATE_STATUS: int = ...
GL_VENDOR: int = ...
GL_VERSION: int = ...
GL_VERTEX_ARRAY: int = ...
GL_VERTEX_ARRAY_BINDING: int = ...
GL_VERTEX_ARRAY_BUFFER_BINDING: int = ...
GL_VERTEX_ARRAY_KHR: int = ...
GL_VERTEX_ARRAY_POINTER: int = ...
GL_VERTEX_ARRAY_SIZE: int = ...
GL_VERTEX_ARRAY_STRIDE: int = ...
GL_VERTEX_ARRAY_TYPE: int = ...
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT: int = ...
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: int = ...
GL_VERTEX_ATTRIB_ARRAY_DIVISOR: int = ...
GL_VERTEX_ATTRIB_ARRAY_ENABLED: int = ...
GL_VERTEX_ATTRIB_ARRAY_INTEGER: int = ...
GL_VERTEX_ATTRIB_ARRAY_LONG: int = ...
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: int = ...
GL_VERTEX_ATTRIB_ARRAY_POINTER: int = ...
GL_VERTEX_ATTRIB_ARRAY_SIZE: int = ...
GL_VERTEX_ATTRIB_ARRAY_STRIDE: int = ...
GL_VERTEX_ATTRIB_ARRAY_TYPE: int = ...
GL_VERTEX_ATTRIB_BINDING: int = ...
GL_VERTEX_ATTRIB_RELATIVE_OFFSET: int = ...
GL_VERTEX_BINDING_BUFFER: int = ...
GL_VERTEX_BINDING_DIVISOR: int = ...
GL_VERTEX_BINDING_OFFSET: int = ...
GL_VERTEX_BINDING_STRIDE: int = ...
GL_VERTEX_PROGRAM_POINT_SIZE: int = ...
GL_VERTEX_PROGRAM_TWO_SIDE: int = ...
GL_VERTEX_SHADER: int = ...
GL_VERTEX_SHADER_BIT: int = ...
GL_VERTEX_SHADER_INVOCATIONS: int = ...
GL_VERTEX_SUBROUTINE: int = ...
GL_VERTEX_SUBROUTINE_UNIFORM: int = ...
GL_VERTEX_TEXTURE: int = ...
GL_VERTICES_SUBMITTED: int = ...
GL_VIEWPORT: int = ...
GL_VIEWPORT_BIT: int = ...
GL_VIEWPORT_BOUNDS_RANGE: int = ...
GL_VIEWPORT_INDEX_PROVOKING_VERTEX: int = ...
GL_VIEWPORT_SUBPIXEL_BITS: int = ...
GL_VIEW_CLASS_128_BITS: int = ...
GL_VIEW_CLASS_16_BITS: int = ...
GL_VIEW_CLASS_24_BITS: int = ...
GL_VIEW_CLASS_32_BITS: int = ...
GL_VIEW_CLASS_48_BITS: int = ...
GL_VIEW_CLASS_64_BITS: int = ...
GL_VIEW_CLASS_8_BITS: int = ...
GL_VIEW_CLASS_96_BITS: int = ...
GL_VIEW_CLASS_ASTC_10x10_RGBA: int = ...
GL_VIEW_CLASS_ASTC_10x5_RGBA: int = ...
GL_VIEW_CLASS_ASTC_10x6_RGBA: int = ...
GL_VIEW_CLASS_ASTC_10x8_RGBA: int = ...
GL_VIEW_CLASS_ASTC_12x10_RGBA: int = ...
GL_VIEW_CLASS_ASTC_12x12_RGBA: int = ...
GL_VIEW_CLASS_ASTC_4x4_RGBA: int = ...
GL_VIEW_CLASS_ASTC_5x4_RGBA: int = ...
GL_VIEW_CLASS_ASTC_5x5_RGBA: int = ...
GL_VIEW_CLASS_ASTC_6x5_RGBA: int = ...
GL_VIEW_CLASS_ASTC_6x6_RGBA: int = ...
GL_VIEW_CLASS_ASTC_8x5_RGBA: int = ...
GL_VIEW_CLASS_ASTC_8x6_RGBA: int = ...
GL_VIEW_CLASS_ASTC_8x8_RGBA: int = ...
GL_VIEW_CLASS_BPTC_FLOAT: int = ...
GL_VIEW_CLASS_BPTC_UNORM: int = ...
GL_VIEW_CLASS_EAC_R11: int = ...
GL_VIEW_CLASS_EAC_RG11: int = ...
GL_VIEW_CLASS_ETC2_EAC_RGBA: int = ...
GL_VIEW_CLASS_ETC2_RGB: int = ...
GL_VIEW_CLASS_ETC2_RGBA: int = ...
GL_VIEW_CLASS_RGTC1_RED: int = ...
GL_VIEW_CLASS_RGTC2_RG: int = ...
GL_VIEW_CLASS_S3TC_DXT1_RGB: int = ...
GL_VIEW_CLASS_S3TC_DXT1_RGBA: int = ...
GL_VIEW_CLASS_S3TC_DXT3_RGBA: int = ...
GL_VIEW_CLASS_S3TC_DXT5_RGBA: int = ...
GL_VIEW_COMPATIBILITY_CLASS: int = ...
GL_WAIT_FAILED: int = ...
GL_WEIGHT_ARRAY_BUFFER_BINDING: int = ...
GL_WRITE_ONLY: int = ...
GL_XOR: int = ...
GL_ZERO: int = ...
GL_ZERO_TO_ONE: int = ...
GL_ZOOM_X: int = ...
GL_ZOOM_Y: int = ...

def as_8_bit() -> None:
    ...
    """
    (x, encoding='utf-8')
    
    """

def glAccum() -> None: ...
def glActiveShaderProgram() -> None: ...
def glActiveTexture() -> None: ...
def glAlphaFunc() -> None: ...
def glAreTexturesResident() -> None:
    ...
    """
    Allow both Pythonic and C-style calls to glAreTexturesResident

        glAreTexturesResident( arrays.GLuintArray( textures) )

    or

        glAreTexturesResident( int(n), arrays.GLuintArray( textures), arrays.GLuboolean( output) )

    or

        glAreTexturesResident( int(n), arrays.GLuintArray( textures) )

    returns the output arrays.GLubooleanArray
    """

def glArrayElement() -> None: ...
def glAttachShader() -> None: ...
def glBegin() -> None:
    ...
    """
    Begin GL geometry-definition mode, disable automatic error checking
    """

def glBeginConditionalRender() -> None: ...
def glBeginQuery() -> None: ...
def glBeginQueryIndexed() -> None: ...
def glBeginTransformFeedback() -> None: ...
def glBindAttribLocation() -> None: ...
def glBindBuffer() -> None: ...
def glBindBufferBase() -> None: ...
def glBindBufferRange() -> None: ...
def glBindBuffersBase() -> None: ...
def glBindBuffersRange() -> None: ...
def glBindFragDataLocation() -> None: ...
def glBindFragDataLocationIndexed() -> None: ...
def glBindFramebuffer() -> None: ...
def glBindImageTexture() -> None: ...
def glBindImageTextures() -> None: ...
def glBindProgramPipeline() -> None: ...
def glBindRenderbuffer() -> None: ...
def glBindSampler() -> None: ...
def glBindSamplers() -> None: ...
def glBindTexture() -> None: ...
def glBindTextureUnit() -> None: ...
def glBindTextures() -> None: ...
def glBindTransformFeedback() -> None: ...
def glBindVertexArray(vao: int) -> None: ...
def glBindVertexBuffer() -> None: ...
def glBindVertexBuffers() -> None: ...
def glBitmap() -> None: ...
def glBlendColor() -> None: ...
def glBlendEquation() -> None: ...
def glBlendEquationSeparate() -> None: ...
def glBlendEquationSeparatei() -> None: ...
def glBlendEquationi() -> None: ...
def glBlendFunc() -> None: ...
def glBlendFuncSeparate() -> None: ...
def glBlendFuncSeparatei() -> None: ...
def glBlendFunci() -> None: ...
def glBlitFramebuffer() -> None: ...
def glBlitNamedFramebuffer() -> None: ...
def glBufferData() -> None:
    ...
    """
    Copy given data into the currently bound vertex-buffer-data object

    target -- the symbolic constant indicating which buffer type is intended
    size -- if provided, the count-in-bytes of the array
    data -- data-pointer to be used, may be None to initialize without
        copying over a data-set
    usage -- hint to the driver as to how to set up access to the buffer

    Note: parameter "size" can be omitted, which makes the signature
        glBufferData( target, data, usage )
    instead of:
        glBufferData( target, size, data, usage )
    """

def glBufferStorage() -> None: ...
def glBufferSubData() -> None:
    ...
    """
    Copy subset of data into the currently bound vertex-buffer-data object

    target -- the symbolic constant indicating which buffer type is intended
    offset -- offset from beginning of buffer at which to copy bytes
    size -- the count-in-bytes of the array (if an int/long), if None,
        calculate size from data, if an array and data is None, use as
        data (i.e. the parameter can be omitted and calculated)
    data -- data-pointer to be used, may be None to initialize without
        copying over a data-set

    Note that if size is not an int/long it is considered to be data
    *iff* data is None
    """

def glCallList() -> None: ...
def glCallLists() -> None:
    ...
    """
    glCallLists( bytes( lists ) or lists[] ) -> None

    Restricted version of glCallLists, takes a string or a GLuint compatible
    array data-type and passes into the base function.
    """

def glCheckFramebufferStatus() -> None: ...
def glCheckNamedFramebufferStatus() -> None: ...
def glClampColor() -> None: ...
def glClear() -> None: ...
def glClearAccum() -> None: ...
def glClearBufferData() -> None: ...
def glClearBufferSubData() -> None: ...
def glClearBufferfi() -> None: ...
def glClearBufferfv() -> None: ...
def glClearBufferiv() -> None: ...
def glClearBufferuiv() -> None: ...
def glClearColor() -> None: ...
def glClearDepth() -> None: ...
def glClearDepthf() -> None: ...
def glClearIndex() -> None: ...
def glClearNamedBufferData() -> None: ...
def glClearNamedBufferSubData() -> None: ...
def glClearNamedFramebufferfi() -> None: ...
def glClearNamedFramebufferfv() -> None: ...
def glClearNamedFramebufferiv() -> None: ...
def glClearNamedFramebufferuiv() -> None: ...
def glClearStencil() -> None: ...
def glClearTexImage() -> None: ...
def glClearTexSubImage() -> None: ...
def glClientActiveTexture() -> None: ...
def glClientWaitSync() -> None: ...
def glClipControl() -> None: ...
def glClipPlane() -> None: ...
def glColor() -> None:
    ...
    """
    glColor*f* -- convenience function to dispatch on argument type

    dispatches to glColor3f, glColor2f, glColor4f, glColor3f, glColor2f, glColor4f
    depending on the arguments passed...
    """

def glColor3b() -> None: ...
def glColor3bv() -> None: ...
def glColor3d() -> None: ...
def glColor3dv() -> None: ...
def glColor3f() -> None: ...
def glColor3fv() -> None: ...
def glColor3i() -> None: ...
def glColor3iv() -> None: ...
def glColor3s() -> None: ...
def glColor3sv() -> None: ...
def glColor3ub() -> None: ...
def glColor3ubv() -> None: ...
def glColor3ui() -> None: ...
def glColor3uiv() -> None: ...
def glColor3us() -> None: ...
def glColor3usv() -> None: ...
def glColor4b() -> None: ...
def glColor4bv() -> None: ...
def glColor4d() -> None: ...
def glColor4dv() -> None: ...
def glColor4f() -> None: ...
def glColor4fv() -> None: ...
def glColor4i() -> None: ...
def glColor4iv() -> None: ...
def glColor4s() -> None: ...
def glColor4sv() -> None: ...
def glColor4ub() -> None: ...
def glColor4ubv() -> None: ...
def glColor4ui() -> None: ...
def glColor4uiv() -> None: ...
def glColor4us() -> None: ...
def glColor4usv() -> None: ...
def glColorMask() -> None: ...
def glColorMaski() -> None: ...
def glColorMaterial() -> None: ...
def glColorP3ui() -> None: ...
def glColorP3uiv() -> None: ...
def glColorP4ui() -> None: ...
def glColorP4uiv() -> None: ...
def glColorPointer() -> None: ...
def glColorPointerb() -> None: ...
def glColorPointerd() -> None: ...
def glColorPointerf() -> None: ...
def glColorPointeri() -> None: ...
def glColorPointers() -> None: ...
def glColorPointerub() -> None: ...
def glColorPointerui() -> None: ...
def glColorPointerus() -> None: ...
def glColorSubTable() -> None: ...
def glColorTable() -> None: ...
def glColorTableParameterfv() -> None: ...
def glColorTableParameteriv() -> None: ...
def glCompileShader() -> None: ...
def glCompressedTexImage1D() -> None: ...
def glCompressedTexImage2D() -> None: ...
def glCompressedTexImage3D() -> None: ...
def glCompressedTexSubImage1D() -> None: ...
def glCompressedTexSubImage2D() -> None: ...
def glCompressedTexSubImage3D() -> None: ...
def glCompressedTextureSubImage1D() -> None: ...
def glCompressedTextureSubImage2D() -> None: ...
def glCompressedTextureSubImage3D() -> None: ...
def glConvolutionFilter1D() -> None: ...
def glConvolutionFilter2D() -> None: ...
def glConvolutionParameterf() -> None: ...
def glConvolutionParameterfv() -> None: ...
def glConvolutionParameteri() -> None: ...
def glConvolutionParameteriv() -> None: ...
def glCopyBufferSubData() -> None: ...
def glCopyColorSubTable() -> None: ...
def glCopyColorTable() -> None: ...
def glCopyConvolutionFilter1D() -> None: ...
def glCopyConvolutionFilter2D() -> None: ...
def glCopyImageSubData() -> None: ...
def glCopyNamedBufferSubData() -> None: ...
def glCopyPixels() -> None: ...
def glCopyTexImage1D() -> None: ...
def glCopyTexImage2D() -> None: ...
def glCopyTexSubImage1D() -> None: ...
def glCopyTexSubImage2D() -> None: ...
def glCopyTexSubImage3D() -> None: ...
def glCopyTextureSubImage1D() -> None: ...
def glCopyTextureSubImage2D() -> None: ...
def glCopyTextureSubImage3D() -> None: ...
def glCreateBuffers() -> None: ...
def glCreateFramebuffers() -> None: ...
def glCreateProgram() -> None: ...
def glCreateProgramPipelines() -> None: ...
def glCreateQueries() -> None: ...
def glCreateRenderbuffers() -> None: ...
def glCreateSamplers() -> None: ...
def glCreateShader() -> None: ...
def glCreateShaderProgramv() -> None: ...
def glCreateTextures() -> None: ...
def glCreateTransformFeedbacks() -> None: ...
def glCreateVertexArrays() -> None: ...
def glCullFace() -> None: ...
def glDebugMessageCallback() -> None: ...
def glDebugMessageCallbackKHR() -> None: ...
def glDebugMessageControl() -> None: ...
def glDebugMessageControlKHR() -> None: ...
def glDebugMessageInsert() -> None: ...
def glDebugMessageInsertKHR() -> None: ...
def glDeleteBuffers() -> None: ...
def glDeleteFramebuffers() -> None: ...
def glDeleteLists() -> None: ...
def glDeleteProgram() -> None: ...
def glDeleteProgramPipelines() -> None: ...
def glDeleteQueries() -> None: ...
def glDeleteRenderbuffers() -> None: ...
def glDeleteSamplers() -> None: ...
def glDeleteShader() -> None: ...
def glDeleteSync() -> None: ...
def glDeleteTextures() -> None:
    ...
    """
    Delete specified set of textures
    
    If array is *not* passed then `size` must be a `GLuintArray`
    compatible object which can be sized using `arraySize`, the 
    result of which will be used as size.
    """

def glDeleteTransformFeedbacks() -> None: ...
def glDeleteVertexArrays(size: int, values: list[int]) -> None: ...
def glDepthFunc() -> None: ...
def glDepthMask() -> None: ...
def glDepthRange() -> None: ...
def glDepthRangeArrayv() -> None: ...
def glDepthRangeIndexed() -> None: ...
def glDepthRangef() -> None: ...
def glDetachShader() -> None: ...
def glDisable() -> None: ...
def glDisableClientState() -> None: ...
def glDisableVertexArrayAttrib() -> None: ...
def glDisableVertexAttribArray() -> None: ...
def glDisablei() -> None: ...
def glDispatchCompute() -> None: ...
def glDispatchComputeIndirect() -> None: ...
def glDrawArrays(topology: int, offset: int, count: int) -> None: ...
def glDrawArraysIndirect() -> None: ...
def glDrawArraysInstanced() -> None: ...
def glDrawArraysInstancedBaseInstance() -> None: ...
def glDrawBuffer() -> None: ...
def glDrawBuffers() -> None:
    ...
    """
    glDrawBuffers( bufs ) -> bufs

    Wrapper will calculate n from dims of bufs if only
    one argument is provided...
    """

def glDrawElements(
    topology: int,
    count: int,
    format: int,
    p: ctypes.c_void_p,
) -> None: ...
def glDrawElementsBaseVertex() -> None: ...
def glDrawElementsIndirect() -> None: ...
def glDrawElementsInstanced() -> None: ...
def glDrawElementsInstancedBaseInstance() -> None: ...
def glDrawElementsInstancedBaseVertex() -> None: ...
def glDrawElementsInstancedBaseVertexBaseInstance() -> None: ...
def glDrawElementsub() -> None: ...
def glDrawElementsui() -> None: ...
def glDrawElementsus() -> None: ...
def glDrawPixels() -> None: ...
def glDrawPixelsb() -> None: ...
def glDrawPixelsf() -> None: ...
def glDrawPixelsi() -> None: ...
def glDrawPixelss() -> None: ...
def glDrawPixelsub() -> None: ...
def glDrawPixelsui() -> None: ...
def glDrawPixelsus() -> None: ...
def glDrawRangeElements() -> None: ...
def glDrawRangeElementsBaseVertex() -> None: ...
def glDrawTransformFeedback() -> None: ...
def glDrawTransformFeedbackInstanced() -> None: ...
def glDrawTransformFeedbackStream() -> None: ...
def glDrawTransformFeedbackStreamInstanced() -> None: ...
def glEdgeFlag() -> None: ...
def glEdgeFlagPointer() -> None: ...
def glEdgeFlagPointerb() -> None: ...
def glEdgeFlagv() -> None: ...
def glEnable() -> None: ...
def glEnableClientState() -> None: ...
def glEnableVertexArrayAttrib() -> None: ...
def glEnableVertexAttribArray(index: int) -> None: ...
def glEnablei() -> None: ...
def glEnd() -> None:
    ...
    """
    Finish GL geometry-definition mode, re-enable automatic error checking
    """

def glEndConditionalRender() -> None: ...
def glEndList() -> None: ...
def glEndQuery() -> None: ...
def glEndQueryIndexed() -> None: ...
def glEndTransformFeedback() -> None: ...
def glEvalCoord1d() -> None: ...
def glEvalCoord1dv() -> None: ...
def glEvalCoord1f() -> None: ...
def glEvalCoord1fv() -> None: ...
def glEvalCoord2d() -> None: ...
def glEvalCoord2dv() -> None: ...
def glEvalCoord2f() -> None: ...
def glEvalCoord2fv() -> None: ...
def glEvalMesh1() -> None: ...
def glEvalMesh2() -> None: ...
def glEvalPoint1() -> None: ...
def glEvalPoint2() -> None: ...
def glFeedbackBuffer() -> None:
    ...
    """
    (size, type, buffer=None)
    Create a selection buffer of the given size
    """

def glFenceSync() -> None: ...
def glFinish() -> None: ...
def glFlush() -> None: ...
def glFlushMappedBufferRange() -> None: ...
def glFlushMappedNamedBufferRange() -> None: ...
def glFogCoordPointer() -> None: ...
def glFogCoordd() -> None: ...
def glFogCoorddv() -> None: ...
def glFogCoordf() -> None: ...
def glFogCoordfv() -> None: ...
def glFogf() -> None: ...
def glFogfv() -> None: ...
def glFogi() -> None: ...
def glFogiv() -> None: ...
def glFramebufferParameteri() -> None: ...
def glFramebufferRenderbuffer() -> None: ...
def glFramebufferTexture() -> None: ...
def glFramebufferTexture1D() -> None: ...
def glFramebufferTexture2D() -> None: ...
def glFramebufferTexture3D() -> None: ...
def glFramebufferTextureLayer() -> None: ...
def glFrontFace() -> None: ...
def glFrustum() -> None: ...
def glGenBuffers() -> None: ...
def glGenFramebuffers() -> None: ...
def glGenLists() -> None: ...
def glGenProgramPipelines() -> None: ...
def glGenQueries() -> None:
    ...
    """
    Generate n queries, if ids is None, is allocated

    returns array of ids
    """

def glGenRenderbuffers() -> None: ...
def glGenSamplers() -> None: ...
def glGenTextures() -> None: ...
def glGenTransformFeedbacks() -> None: ...
def glGenVertexArrays() -> None: ...
def glGenerateMipmap() -> None: ...
def glGenerateTextureMipmap() -> None: ...
def glGetActiveAtomicCounterBufferiv() -> None: ...
def glGetActiveAttrib() -> None:
    ...
    """
    Retrieves information about the attribute variable.

    program -- specifies the program to be queried
    index -- index of the attribute to be queried 
    
    Following parameters are optional:
    
    bufSize -- determines the size of the buffer (limits number of bytes written),
               if not provided, will be GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    length -- pointer-to-GLsizei that will hold the resulting length of the name
    size -- pointer-to-GLint that will hold the size of the attribute
    type -- pointer-to-GLenum that will hold the type constant of the attribute
    name -- pointer-to-GLchar that will hold the (null-terminated) name string
    
    returns (bytes) name, (int)size, (enum)type
    """

def glGetActiveSubroutineName() -> None: ...
def glGetActiveSubroutineUniformName() -> None: ...
def glGetActiveSubroutineUniformiv() -> None: ...
def glGetActiveUniform() -> None:
    ...
    """
    Retrieve the name, size and type of the uniform of the index in the program
    
    program -- specifies the program to be queried
    index -- index of the uniform to be queried 
    
    Following parameters are optional:
    
    bufSize -- determines the size of the buffer (limits number of bytes written),
               if not provided, will be GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH
    length -- pointer-to-GLsizei that will hold the resulting length of the name
    size -- pointer-to-GLint that will hold the size of the attribute
    type -- pointer-to-GLenum that will hold the type constant of the attribute
    name -- pointer-to-GLchar that will hold the (null-terminated) name string
    
    returns (bytes) name, (int)size, (enum)type
    """

def glGetActiveUniformBlockName() -> None: ...
def glGetActiveUniformBlockiv() -> None: ...
def glGetActiveUniformName() -> None: ...
def glGetActiveUniformsiv() -> None: ...
def glGetAttachedShaders() -> None:
    ...
    """
    Retrieve the attached objects as an array of GLhandle instances
    """

def glGetAttribLocation() -> None:
    ...
    """
    Check that name is a string with a null byte at the end of it
    """

def glGetBoolean() -> None: ...
def glGetBooleani_v() -> None: ...
def glGetBooleanv() -> None: ...
def glGetBufferParameteri64v() -> None: ...
def glGetBufferParameteriv() -> None: ...
def glGetBufferPointerv() -> None:
    ...
    """
    Retrieve a ctypes pointer to buffer's data
    """

def glGetBufferSubData() -> None: ...
def glGetClipPlane() -> None: ...
def glGetColorTable() -> None:
    ...
    """
    Retrieve the current 1D color table as a bitmap
    """

def glGetColorTableParameterfv() -> None: ...
def glGetColorTableParameteriv() -> None: ...
def glGetCompressedTexImage() -> None: ...
def glGetCompressedTextureImage() -> None: ...
def glGetCompressedTextureSubImage() -> None: ...
def glGetConvolutionFilter() -> None:
    ...
    """
    Retrieve 1 or 2D convolution parameter "kernels" as pixel data
    """

def glGetConvolutionParameterfv() -> None: ...
def glGetConvolutionParameteriv() -> None: ...
def glGetDebugMessageLog() -> None: ...
def glGetDebugMessageLogKHR() -> None: ...
def glGetDouble() -> None: ...
def glGetDoublei_v() -> None: ...
def glGetDoublev() -> None: ...
def glGetError() -> None: ...
def glGetFloat() -> None: ...
def glGetFloati_v() -> None: ...
def glGetFloatv() -> None: ...
def glGetFragDataIndex() -> None: ...
def glGetFragDataLocation() -> None: ...
def glGetFramebufferAttachmentParameteriv() -> None: ...
def glGetFramebufferParameteriv() -> None: ...
def glGetGraphicsResetStatus() -> None: ...
def glGetHistogram() -> None:
    ...
    """
    Retrieve current 1D histogram as a 1D bitmap
    """

def glGetHistogramParameterfv() -> None: ...
def glGetHistogramParameteriv() -> None: ...
def glGetInteger() -> None: ...
def glGetInteger64i_v() -> None: ...
def glGetInteger64v() -> None: ...
def glGetIntegeri_v() -> None: ...
def glGetIntegerv() -> None: ...
def glGetInternalformati64v() -> None: ...
def glGetInternalformativ() -> None: ...
def glGetLightfv() -> None: ...
def glGetLightiv() -> None: ...
def glGetMapdv() -> None: ...
def glGetMapfv() -> None: ...
def glGetMapiv() -> None: ...
def glGetMaterialfv() -> None: ...
def glGetMaterialiv() -> None: ...
def glGetMinmax() -> None:
    ...
    """
    Retrieve minimum and maximum values as a 2-element image
    """

def glGetMinmaxParameterfv() -> None: ...
def glGetMinmaxParameteriv() -> None: ...
def glGetMultisamplefv() -> None: ...
def glGetNamedBufferParameteri64v() -> None: ...
def glGetNamedBufferParameteriv() -> None: ...
def glGetNamedBufferPointerv() -> None: ...
def glGetNamedBufferSubData() -> None: ...
def glGetNamedFramebufferAttachmentParameteriv() -> None: ...
def glGetNamedFramebufferParameteriv() -> None: ...
def glGetNamedRenderbufferParameteriv() -> None: ...
def glGetObjectLabel() -> None: ...
def glGetObjectLabelKHR() -> None: ...
def glGetObjectPtrLabel() -> None: ...
def glGetObjectPtrLabelKHR() -> None: ...
def glGetPixelMapfv() -> None: ...
def glGetPixelMapuiv() -> None: ...
def glGetPixelMapusv() -> None: ...
def glGetPointerv() -> None: ...
def glGetPointervKHR() -> None: ...
def glGetPolygonStipple() -> None: ...
def glGetPolygonStippleub() -> None: ...
def glGetProgramBinary() -> None: ...
def glGetProgramInfoLog() -> None:
    ...
    """
    Retrieve the shader program's error messages as a Python string

    returns string which is '' if no message
    """

def glGetProgramInterfaceiv() -> None: ...
def glGetProgramPipelineInfoLog() -> None: ...
def glGetProgramPipelineiv() -> None: ...
def glGetProgramResourceIndex() -> None: ...
def glGetProgramResourceLocation() -> None: ...
def glGetProgramResourceLocationIndex() -> None: ...
def glGetProgramResourceName() -> None: ...
def glGetProgramResourceiv() -> None: ...
def glGetProgramStageiv() -> None: ...
def glGetProgramiv() -> None: ...
def glGetQueryBufferObjecti64v() -> None: ...
def glGetQueryBufferObjectiv() -> None: ...
def glGetQueryBufferObjectui64v() -> None: ...
def glGetQueryBufferObjectuiv() -> None: ...
def glGetQueryIndexediv() -> None: ...
def glGetQueryObjecti64v() -> None: ...
def glGetQueryObjectiv() -> None: ...
def glGetQueryObjectui64v() -> None: ...
def glGetQueryObjectuiv() -> None: ...
def glGetQueryiv() -> None: ...
def glGetRenderbufferParameteriv() -> None: ...
def glGetSamplerParameterIiv() -> None: ...
def glGetSamplerParameterIuiv() -> None: ...
def glGetSamplerParameterfv() -> None: ...
def glGetSamplerParameteriv() -> None: ...
def glGetSeparableFilter() -> None:
    ...
    """
    Retrieve 2 1D convolution parameter "kernels" as pixel data
    """

def glGetShaderInfoLog() -> None:
    ...
    """
    Retrieve the shader's error messages as a Python string

    returns string which is '' if no message
    """

def glGetShaderPrecisionFormat() -> None:
    ...
    """
    Provides range and precision if not provided, returns (range,precision)
    """

def glGetShaderSource() -> None:
    ...
    """
    Retrieve the program/shader's source code as a Python string

    returns string which is '' if no source code
    """

def glGetShaderiv() -> None:
    ...
    """
    Retrieve the integer parameter for the given shader

    shader -- shader ID to query
    pname -- parameter name
    status -- pointer to integer to receive status or None to
        return the parameter as an integer value

    returns
        integer if status parameter is None
        status if status parameter is not None
    """

def glGetString() -> None:
    ...
    """
    glGetString( constant ) -> Current string value
    """

def glGetStringi() -> None: ...
def glGetSubroutineIndex() -> None: ...
def glGetSubroutineUniformLocation() -> None: ...
def glGetSynciv() -> None: ...
def glGetTexEnvfv() -> None: ...
def glGetTexEnviv() -> None: ...
def glGetTexGendv() -> None: ...
def glGetTexGenfv() -> None: ...
def glGetTexGeniv() -> None: ...
def glGetTexImage() -> None:
    ...
    """
    (target, level, format, type, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image

    target -- enum constant for the texture engine to be read
    level -- the mip-map level to read
    format -- image format to read out the data
    type -- data-type into which to read the data
    array -- optional array/offset into which to store the value

    outputType -- default (bytes) provides string output of the
        results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
        and type == GL_UNSIGNED_BYTE.  Any other value will cause
        output in the default array output format.

    returns the pixel data array in the format defined by the
    format, type and outputType
    """

def glGetTexImageb() -> None:
    ...
    """
    (target, level, format, type=GL_BYTE, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImaged() -> None:
    ...
    """
    (target, level, format, type=GL_DOUBLE, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImagef() -> None:
    ...
    """
    (target, level, format, type=GL_FLOAT, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImagei() -> None:
    ...
    """
    (target, level, format, type=GL_INT, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImages() -> None:
    ...
    """
    (target, level, format, type=GL_SHORT, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImageub() -> None:
    ...
    """
    (target, level, format, type=GL_UNSIGNED_BYTE, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImageui() -> None:
    ...
    """
    (target, level, format, type=GL_UNSIGNED_INT, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexImageus() -> None:
    ...
    """
    (target, level, format, type=GL_UNSIGNED_SHORT, array=None, outputType=<class 'bytes'>)
    Get a texture-level as an image
        
        target -- enum constant for the texture engine to be read
        level -- the mip-map level to read
        format -- image format to read out the data
        type -- data-type into which to read the data
        array -- optional array/offset into which to store the value

        outputType -- default (bytes) provides string output of the
            results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
            and type == GL_UNSIGNED_BYTE.  Any other value will cause
            output in the default array output format.

        returns the pixel data array in the format defined by the
        format, type and outputType
    """

def glGetTexLevelParameterfv() -> None: ...
def glGetTexLevelParameteriv() -> None: ...
def glGetTexParameterIiv() -> None: ...
def glGetTexParameterIuiv() -> None: ...
def glGetTexParameterfv() -> None: ...
def glGetTexParameteriv() -> None: ...
def glGetTextureImage() -> None: ...
def glGetTextureLevelParameterfv() -> None: ...
def glGetTextureLevelParameteriv() -> None: ...
def glGetTextureParameterIiv() -> None: ...
def glGetTextureParameterIuiv() -> None: ...
def glGetTextureParameterfv() -> None: ...
def glGetTextureParameteriv() -> None: ...
def glGetTextureSubImage() -> None: ...
def glGetTransformFeedbackVarying() -> None: ...
def glGetTransformFeedbacki64_v() -> None: ...
def glGetTransformFeedbacki_v() -> None: ...
def glGetTransformFeedbackiv() -> None: ...
def glGetUniformBlockIndex() -> None: ...
def glGetUniformIndices() -> None: ...
def glGetUniformLocation() -> None:
    ...
    """
    Check that name is a string with a null byte at the end of it
    """

def glGetUniformSubroutineuiv() -> None: ...
def glGetUniformdv() -> None: ...
def glGetUniformfv() -> None: ...
def glGetUniformiv() -> None: ...
def glGetUniformuiv() -> None: ...
def glGetVertexArrayIndexed64iv() -> None: ...
def glGetVertexArrayIndexediv() -> None: ...
def glGetVertexArrayiv() -> None: ...
def glGetVertexAttribIiv() -> None: ...
def glGetVertexAttribIuiv() -> None: ...
def glGetVertexAttribLdv() -> None: ...
def glGetVertexAttribPointerv() -> None: ...
def glGetVertexAttribdv() -> None: ...
def glGetVertexAttribfv() -> None: ...
def glGetVertexAttribiv() -> None: ...
def glGetnColorTable() -> None: ...
def glGetnCompressedTexImage() -> None: ...
def glGetnConvolutionFilter() -> None: ...
def glGetnHistogram() -> None: ...
def glGetnMapdv() -> None: ...
def glGetnMapfv() -> None: ...
def glGetnMapiv() -> None: ...
def glGetnMinmax() -> None: ...
def glGetnPixelMapfv() -> None: ...
def glGetnPixelMapuiv() -> None: ...
def glGetnPixelMapusv() -> None: ...
def glGetnPolygonStipple() -> None: ...
def glGetnSeparableFilter() -> None: ...
def glGetnTexImage() -> None: ...
def glGetnUniformdv() -> None: ...
def glGetnUniformfv() -> None: ...
def glGetnUniformiv() -> None: ...
def glGetnUniformuiv() -> None: ...
def glHint() -> None: ...
def glHistogram() -> None: ...
def glIndexMask() -> None: ...
def glIndexPointer() -> None: ...
def glIndexPointerb() -> None: ...
def glIndexPointerd() -> None: ...
def glIndexPointerf() -> None: ...
def glIndexPointeri() -> None: ...
def glIndexPointers() -> None: ...
def glIndexPointerub() -> None: ...
def glIndexd() -> None: ...
def glIndexdv() -> None: ...
def glIndexf() -> None: ...
def glIndexfv() -> None: ...
def glIndexi() -> None: ...
def glIndexiv() -> None: ...
def glIndexs() -> None: ...
def glIndexsv() -> None: ...
def glIndexub() -> None: ...
def glIndexubv() -> None: ...
def glInitArraysOfArraysARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitBaseInstanceARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitClearBufferObjectARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitCompressedTexturePixelStorageARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitComputeShaderARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitConservativeDepthARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitCopyImageARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitDebugKHR() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitEs2CompatibilityARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitEs3CompatibilityARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitExplicitUniformLocationARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitFragmentLayerViewportARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitFramebufferNoAttachmentsARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGetProgramBinaryARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl10VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl11VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl12VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl13VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl14VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl15VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl20VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl21VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl30VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl31VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl32VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl33VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl40VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl41VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl42VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl43VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl44VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl45VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitGl46VERSION() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitImagingARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitInternalformatQuery2ARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitInternalformatQueryARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitInvalidateSubdataARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitMapBufferAlignmentARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitMultiDrawIndirectARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitNames() -> None: ...
def glInitProgramInterfaceQueryARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitRobustBufferAccessBehaviorARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitSeparateShaderObjectsARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShaderAtomicCountersARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShaderImageLoadStoreARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShaderImageSizeARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShaderPrecisionARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShaderStorageBufferObjectARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShadingLanguage420PackARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitShadingLanguagePackingARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitStencilTexturingARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTextureBufferRangeARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTextureQueryLevelsARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTextureStorageARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTextureStorageMultisampleARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTextureViewARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitTransformFeedbackInstancedARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitVertexAttrib64BitARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitVertexAttribBindingARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInitViewportArrayARB() -> None:
    ...
    """
    Return boolean indicating whether this extension is available
    """

def glInterleavedArrays() -> None: ...
def glInvalidateBufferData() -> None: ...
def glInvalidateBufferSubData() -> None: ...
def glInvalidateFramebuffer() -> None: ...
def glInvalidateNamedFramebufferData() -> None: ...
def glInvalidateNamedFramebufferSubData() -> None: ...
def glInvalidateSubFramebuffer() -> None: ...
def glInvalidateTexImage() -> None: ...
def glInvalidateTexSubImage() -> None: ...
def glIsBuffer() -> None: ...
def glIsEnabled() -> None: ...
def glIsEnabledi() -> None: ...
def glIsFramebuffer() -> None: ...
def glIsList() -> None: ...
def glIsProgram() -> None: ...
def glIsProgramPipeline() -> None: ...
def glIsQuery() -> None: ...
def glIsRenderbuffer() -> None: ...
def glIsSampler() -> None: ...
def glIsShader() -> None: ...
def glIsSync() -> None: ...
def glIsTexture() -> None: ...
def glIsTransformFeedback() -> None: ...
def glIsVertexArray() -> None: ...
def glLight() -> None: ...
def glLightModelf() -> None: ...
def glLightModelfv() -> None: ...
def glLightModeli() -> None: ...
def glLightModeliv() -> None: ...
def glLightf() -> None: ...
def glLightfv() -> None: ...
def glLighti() -> None: ...
def glLightiv() -> None: ...
def glLineStipple() -> None: ...
def glLineWidth() -> None: ...
def glLinkProgram() -> None: ...
def glListBase() -> None: ...
def glLoadIdentity() -> None: ...
def glLoadMatrixd() -> None: ...
def glLoadMatrixf() -> None: ...
def glLoadName() -> None: ...
def glLoadTransposeMatrixd() -> None: ...
def glLoadTransposeMatrixf() -> None: ...
def glLogicOp() -> None: ...
def glMap1d() -> None:
    ...
    """
    (target, u1, u2, points)
    glMap1(target, u1, u2, points[][][]) -> None

        This is a completely non-standard signature which doesn't allow for most
        of the funky uses with strides and the like, but it has been like this for
        a very long time...
    """

def glMap1f() -> None:
    ...
    """
    (target, u1, u2, points)
    glMap1(target, u1, u2, points[][][]) -> None

        This is a completely non-standard signature which doesn't allow for most
        of the funky uses with strides and the like, but it has been like this for
        a very long time...
    """

def glMap2d() -> None:
    ...
    """
    (target, u1, u2, v1, v2, points)
    glMap2(target, u1, u2, v1, v2, points[][][]) -> None

        This is a completely non-standard signature which doesn't allow for most
        of the funky uses with strides and the like, but it has been like this for
        a very long time...
    """

def glMap2f() -> None:
    ...
    """
    (target, u1, u2, v1, v2, points)
    glMap2(target, u1, u2, v1, v2, points[][][]) -> None

        This is a completely non-standard signature which doesn't allow for most
        of the funky uses with strides and the like, but it has been like this for
        a very long time...
    """

def glMapBuffer() -> None: ...
def glMapBufferRange() -> None: ...
def glMapGrid1d() -> None: ...
def glMapGrid1f() -> None: ...
def glMapGrid2d() -> None: ...
def glMapGrid2f() -> None: ...
def glMapNamedBuffer() -> None: ...
def glMapNamedBufferRange() -> None: ...
def glMaterial() -> None:
    ...
    """
    (faces, constant, *args)
    glMaterial -- convenience function to dispatch on argument type

    If passed a single argument in args, calls:
        glMaterialfv( faces, constant, args[0] )
    else calls:
        glMaterialf( faces, constant, *args )
    """

def glMaterialf() -> None: ...
def glMaterialfv() -> None: ...
def glMateriali() -> None: ...
def glMaterialiv() -> None: ...
def glMatrixMode() -> None: ...
def glMemoryBarrier() -> None: ...
def glMemoryBarrierByRegion() -> None: ...
def glMinSampleShading() -> None: ...
def glMinmax() -> None: ...
def glMultMatrixd() -> None: ...
def glMultMatrixf() -> None: ...
def glMultTransposeMatrixd() -> None: ...
def glMultTransposeMatrixf() -> None: ...
def glMultiDrawArrays() -> None: ...
def glMultiDrawArraysIndirect() -> None: ...
def glMultiDrawArraysIndirectCount() -> None: ...
def glMultiDrawElements() -> None: ...
def glMultiDrawElementsBaseVertex() -> None: ...
def glMultiDrawElementsIndirect() -> None: ...
def glMultiDrawElementsIndirectCount() -> None: ...
def glMultiTexCoord1d() -> None: ...
def glMultiTexCoord1dv() -> None: ...
def glMultiTexCoord1f() -> None: ...
def glMultiTexCoord1fv() -> None: ...
def glMultiTexCoord1i() -> None: ...
def glMultiTexCoord1iv() -> None: ...
def glMultiTexCoord1s() -> None: ...
def glMultiTexCoord1sv() -> None: ...
def glMultiTexCoord2d() -> None: ...
def glMultiTexCoord2dv() -> None: ...
def glMultiTexCoord2f() -> None: ...
def glMultiTexCoord2fv() -> None: ...
def glMultiTexCoord2i() -> None: ...
def glMultiTexCoord2iv() -> None: ...
def glMultiTexCoord2s() -> None: ...
def glMultiTexCoord2sv() -> None: ...
def glMultiTexCoord3d() -> None: ...
def glMultiTexCoord3dv() -> None: ...
def glMultiTexCoord3f() -> None: ...
def glMultiTexCoord3fv() -> None: ...
def glMultiTexCoord3i() -> None: ...
def glMultiTexCoord3iv() -> None: ...
def glMultiTexCoord3s() -> None: ...
def glMultiTexCoord3sv() -> None: ...
def glMultiTexCoord4d() -> None: ...
def glMultiTexCoord4dv() -> None: ...
def glMultiTexCoord4f() -> None: ...
def glMultiTexCoord4fv() -> None: ...
def glMultiTexCoord4i() -> None: ...
def glMultiTexCoord4iv() -> None: ...
def glMultiTexCoord4s() -> None: ...
def glMultiTexCoord4sv() -> None: ...
def glMultiTexCoordP1ui() -> None: ...
def glMultiTexCoordP1uiv() -> None: ...
def glMultiTexCoordP2ui() -> None: ...
def glMultiTexCoordP2uiv() -> None: ...
def glMultiTexCoordP3ui() -> None: ...
def glMultiTexCoordP3uiv() -> None: ...
def glMultiTexCoordP4ui() -> None: ...
def glMultiTexCoordP4uiv() -> None: ...
def glNamedBufferData() -> None: ...
def glNamedBufferStorage() -> None: ...
def glNamedBufferSubData() -> None: ...
def glNamedFramebufferDrawBuffer() -> None: ...
def glNamedFramebufferDrawBuffers() -> None: ...
def glNamedFramebufferParameteri() -> None: ...
def glNamedFramebufferReadBuffer() -> None: ...
def glNamedFramebufferRenderbuffer() -> None: ...
def glNamedFramebufferTexture() -> None: ...
def glNamedFramebufferTextureLayer() -> None: ...
def glNamedRenderbufferStorage() -> None: ...
def glNamedRenderbufferStorageMultisample() -> None: ...
def glNewList() -> None: ...
def glNormal() -> None: ...
def glNormal3b() -> None: ...
def glNormal3bv() -> None: ...
def glNormal3d() -> None: ...
def glNormal3dv() -> None: ...
def glNormal3f() -> None: ...
def glNormal3fv() -> None: ...
def glNormal3i() -> None: ...
def glNormal3iv() -> None: ...
def glNormal3s() -> None: ...
def glNormal3sv() -> None: ...
def glNormalP3ui() -> None: ...
def glNormalP3uiv() -> None: ...
def glNormalPointer() -> None: ...
def glNormalPointerb() -> None: ...
def glNormalPointerd() -> None: ...
def glNormalPointerf() -> None: ...
def glNormalPointeri() -> None: ...
def glNormalPointers() -> None: ...
def glObjectLabel() -> None: ...
def glObjectLabelKHR() -> None: ...
def glObjectPtrLabel() -> None: ...
def glObjectPtrLabelKHR() -> None: ...
def glOrtho() -> None: ...
def glPassThrough() -> None: ...
def glPatchParameterfv() -> None: ...
def glPatchParameteri() -> None: ...
def glPauseTransformFeedback() -> None: ...
def glPixelMapfv() -> None: ...
def glPixelMapuiv() -> None: ...
def glPixelMapusv() -> None: ...
def glPixelStoref() -> None: ...
def glPixelStorei() -> None: ...
def glPixelTransferf() -> None: ...
def glPixelTransferi() -> None: ...
def glPixelZoom() -> None: ...
def glPointParameterf() -> None: ...
def glPointParameterfv() -> None: ...
def glPointParameteri() -> None: ...
def glPointParameteriv() -> None: ...
def glPointSize() -> None: ...
def glPolygonMode() -> None: ...
def glPolygonOffset() -> None: ...
def glPolygonOffsetClamp() -> None: ...
def glPolygonStipple() -> None: ...
def glPopAttrib() -> None: ...
def glPopClientAttrib() -> None: ...
def glPopDebugGroup() -> None: ...
def glPopDebugGroupKHR() -> None: ...
def glPopMatrix() -> None: ...
def glPopName() -> None: ...
def glPrimitiveRestartIndex() -> None: ...
def glPrioritizeTextures() -> None: ...
def glProgramBinary() -> None: ...
def glProgramParameteri() -> None: ...
def glProgramUniform1d() -> None: ...
def glProgramUniform1dv() -> None: ...
def glProgramUniform1f() -> None: ...
def glProgramUniform1fv() -> None: ...
def glProgramUniform1i() -> None: ...
def glProgramUniform1iv() -> None: ...
def glProgramUniform1ui() -> None: ...
def glProgramUniform1uiv() -> None: ...
def glProgramUniform2d() -> None: ...
def glProgramUniform2dv() -> None: ...
def glProgramUniform2f() -> None: ...
def glProgramUniform2fv() -> None: ...
def glProgramUniform2i() -> None: ...
def glProgramUniform2iv() -> None: ...
def glProgramUniform2ui() -> None: ...
def glProgramUniform2uiv() -> None: ...
def glProgramUniform3d() -> None: ...
def glProgramUniform3dv() -> None: ...
def glProgramUniform3f() -> None: ...
def glProgramUniform3fv() -> None: ...
def glProgramUniform3i() -> None: ...
def glProgramUniform3iv() -> None: ...
def glProgramUniform3ui() -> None: ...
def glProgramUniform3uiv() -> None: ...
def glProgramUniform4d() -> None: ...
def glProgramUniform4dv() -> None: ...
def glProgramUniform4f() -> None: ...
def glProgramUniform4fv() -> None: ...
def glProgramUniform4i() -> None: ...
def glProgramUniform4iv() -> None: ...
def glProgramUniform4ui() -> None: ...
def glProgramUniform4uiv() -> None: ...
def glProgramUniformMatrix2dv() -> None: ...
def glProgramUniformMatrix2fv() -> None: ...
def glProgramUniformMatrix2x3dv() -> None: ...
def glProgramUniformMatrix2x3fv() -> None: ...
def glProgramUniformMatrix2x4dv() -> None: ...
def glProgramUniformMatrix2x4fv() -> None: ...
def glProgramUniformMatrix3dv() -> None: ...
def glProgramUniformMatrix3fv() -> None: ...
def glProgramUniformMatrix3x2dv() -> None: ...
def glProgramUniformMatrix3x2fv() -> None: ...
def glProgramUniformMatrix3x4dv() -> None: ...
def glProgramUniformMatrix3x4fv() -> None: ...
def glProgramUniformMatrix4dv() -> None: ...
def glProgramUniformMatrix4fv() -> None: ...
def glProgramUniformMatrix4x2dv() -> None: ...
def glProgramUniformMatrix4x2fv() -> None: ...
def glProgramUniformMatrix4x3dv() -> None: ...
def glProgramUniformMatrix4x3fv() -> None: ...
def glProvokingVertex() -> None: ...
def glPushAttrib() -> None: ...
def glPushClientAttrib() -> None: ...
def glPushDebugGroup() -> None: ...
def glPushDebugGroupKHR() -> None: ...
def glPushMatrix() -> None: ...
def glPushName() -> None: ...
def glQueryCounter() -> None: ...
def glRasterPos() -> None:
    ...
    """
    Choose glRasterPosX based on number of args
    """

def glRasterPos2d() -> None: ...
def glRasterPos2dv() -> None: ...
def glRasterPos2f() -> None: ...
def glRasterPos2fv() -> None: ...
def glRasterPos2i() -> None: ...
def glRasterPos2iv() -> None: ...
def glRasterPos2s() -> None: ...
def glRasterPos2sv() -> None: ...
def glRasterPos3d() -> None: ...
def glRasterPos3dv() -> None: ...
def glRasterPos3f() -> None: ...
def glRasterPos3fv() -> None: ...
def glRasterPos3i() -> None: ...
def glRasterPos3iv() -> None: ...
def glRasterPos3s() -> None: ...
def glRasterPos3sv() -> None: ...
def glRasterPos4d() -> None: ...
def glRasterPos4dv() -> None: ...
def glRasterPos4f() -> None: ...
def glRasterPos4fv() -> None: ...
def glRasterPos4i() -> None: ...
def glRasterPos4iv() -> None: ...
def glRasterPos4s() -> None: ...
def glRasterPos4sv() -> None: ...
def glReadBuffer() -> None: ...
def glReadPixels() -> None:
    ...
    """
    (x, y, width, height, format, type, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

    x,y,width,height -- location and dimensions of the image to read
        from the buffer
    format -- pixel format for the resulting data
    type -- data-format for the resulting data
    array -- optional array/offset into which to store the value
    outputType -- default (bytes) provides string output of the
        results iff OpenGL.UNSIGNED_BYTE_IMAGES_AS_STRING is True
        and type == GL_UNSIGNED_BYTE.  Any other value will cause
        output in the default array output format.

    returns the pixel data array in the format defined by the
    format, type and outputType
    """

def glReadPixelsb() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_BYTE, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsd() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_DOUBLE, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsf() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_FLOAT, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsi() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_INT, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelss() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_SHORT, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsub() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_UNSIGNED_BYTE, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsui() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_UNSIGNED_INT, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadPixelsus() -> None:
    ...
    """
    (x, y, width, height, format, type=GL_UNSIGNED_SHORT, array=None, outputType=<class 'bytes'>)
    Read specified pixels from the current display buffer

        This typed version returns data in your specified default
        array data-type format, or in the passed array, which will
        be converted to the array-type required by the format.
    """

def glReadnPixels() -> None: ...
def glRectd() -> None: ...
def glRectdv() -> None: ...
def glRectf() -> None: ...
def glRectfv() -> None: ...
def glRecti() -> None: ...
def glRectiv() -> None: ...
def glRects() -> None: ...
def glRectsv() -> None: ...
def glReleaseShaderCompiler() -> None: ...
def glRenderMode() -> None:
    ...
    """
    (newMode)
    Change to the given rendering mode

    If the current mode is GL_FEEDBACK or GL_SELECT, return
    the current buffer appropriate to the mode
    """

def glRenderbufferStorage() -> None: ...
def glRenderbufferStorageMultisample() -> None: ...
def glResetHistogram() -> None: ...
def glResetMinmax() -> None: ...
def glResumeTransformFeedback() -> None: ...
def glRotate() -> None: ...
def glRotated() -> None: ...
def glRotatef() -> None: ...
def glSampleCoverage() -> None: ...
def glSampleMaski() -> None: ...
def glSamplerParameterIiv() -> None: ...
def glSamplerParameterIuiv() -> None: ...
def glSamplerParameterf() -> None: ...
def glSamplerParameterfv() -> None: ...
def glSamplerParameteri() -> None: ...
def glSamplerParameteriv() -> None: ...
def glScale() -> None: ...
def glScaled() -> None: ...
def glScalef() -> None: ...
def glScissor() -> None: ...
def glScissorArrayv() -> None: ...
def glScissorIndexed() -> None: ...
def glScissorIndexedv() -> None: ...
def glSecondaryColor3b() -> None: ...
def glSecondaryColor3bv() -> None: ...
def glSecondaryColor3d() -> None: ...
def glSecondaryColor3dv() -> None: ...
def glSecondaryColor3f() -> None: ...
def glSecondaryColor3fv() -> None: ...
def glSecondaryColor3i() -> None: ...
def glSecondaryColor3iv() -> None: ...
def glSecondaryColor3s() -> None: ...
def glSecondaryColor3sv() -> None: ...
def glSecondaryColor3ub() -> None: ...
def glSecondaryColor3ubv() -> None: ...
def glSecondaryColor3ui() -> None: ...
def glSecondaryColor3uiv() -> None: ...
def glSecondaryColor3us() -> None: ...
def glSecondaryColor3usv() -> None: ...
def glSecondaryColorP3ui() -> None: ...
def glSecondaryColorP3uiv() -> None: ...
def glSecondaryColorPointer() -> None: ...
def glSelectBuffer() -> None:
    ...
    """
    (size, buffer=None)
    Create a selection buffer of the given size
    """

def glSeparableFilter2D() -> None: ...
def glShadeModel() -> None: ...
def glShaderBinary() -> None: ...
def glShaderSource() -> None:
    ...
    """
    glShaderSource( GLhandle(shaderObj),[bytes(string),...]) -> None
    """

def glShaderStorageBlockBinding() -> None: ...
def glSpecializeShader() -> None: ...
def glStencilFunc() -> None: ...
def glStencilFuncSeparate() -> None: ...
def glStencilMask() -> None: ...
def glStencilMaskSeparate() -> None: ...
def glStencilOp() -> None: ...
def glStencilOpSeparate() -> None: ...
def glTexBuffer() -> None: ...
def glTexBufferRange() -> None: ...
def glTexCoord() -> None: ...
def glTexCoord1d() -> None: ...
def glTexCoord1dv() -> None: ...
def glTexCoord1f() -> None: ...
def glTexCoord1fv() -> None: ...
def glTexCoord1i() -> None: ...
def glTexCoord1iv() -> None: ...
def glTexCoord1s() -> None: ...
def glTexCoord1sv() -> None: ...
def glTexCoord2d() -> None: ...
def glTexCoord2dv() -> None: ...
def glTexCoord2f() -> None: ...
def glTexCoord2fv() -> None: ...
def glTexCoord2i() -> None: ...
def glTexCoord2iv() -> None: ...
def glTexCoord2s() -> None: ...
def glTexCoord2sv() -> None: ...
def glTexCoord3d() -> None: ...
def glTexCoord3dv() -> None: ...
def glTexCoord3f() -> None: ...
def glTexCoord3fv() -> None: ...
def glTexCoord3i() -> None: ...
def glTexCoord3iv() -> None: ...
def glTexCoord3s() -> None: ...
def glTexCoord3sv() -> None: ...
def glTexCoord4d() -> None: ...
def glTexCoord4dv() -> None: ...
def glTexCoord4f() -> None: ...
def glTexCoord4fv() -> None: ...
def glTexCoord4i() -> None: ...
def glTexCoord4iv() -> None: ...
def glTexCoord4s() -> None: ...
def glTexCoord4sv() -> None: ...
def glTexCoordP1ui() -> None: ...
def glTexCoordP1uiv() -> None: ...
def glTexCoordP2ui() -> None: ...
def glTexCoordP2uiv() -> None: ...
def glTexCoordP3ui() -> None: ...
def glTexCoordP3uiv() -> None: ...
def glTexCoordP4ui() -> None: ...
def glTexCoordP4uiv() -> None: ...
def glTexCoordPointer() -> None: ...
def glTexCoordPointerb() -> None: ...
def glTexCoordPointerd() -> None: ...
def glTexCoordPointerf() -> None: ...
def glTexCoordPointeri() -> None: ...
def glTexCoordPointers() -> None: ...
def glTexEnvf() -> None: ...
def glTexEnvfv() -> None: ...
def glTexEnvi() -> None: ...
def glTexEnviv() -> None: ...
def glTexGend() -> None: ...
def glTexGendv() -> None: ...
def glTexGenf() -> None: ...
def glTexGenfv() -> None: ...
def glTexGeni() -> None: ...
def glTexGeniv() -> None: ...
def glTexImage1D() -> None: ...
def glTexImage1Db() -> None: ...
def glTexImage1Df() -> None: ...
def glTexImage1Di() -> None: ...
def glTexImage1Ds() -> None: ...
def glTexImage1Dub() -> None: ...
def glTexImage1Dui() -> None: ...
def glTexImage1Dus() -> None: ...
def glTexImage2D() -> None: ...
def glTexImage2DMultisample() -> None: ...
def glTexImage2Db() -> None: ...
def glTexImage2Df() -> None: ...
def glTexImage2Di() -> None: ...
def glTexImage2Ds() -> None: ...
def glTexImage2Dub() -> None: ...
def glTexImage2Dui() -> None: ...
def glTexImage2Dus() -> None: ...
def glTexImage3D() -> None: ...
def glTexImage3DMultisample() -> None: ...
def glTexImage3Db() -> None: ...
def glTexImage3Df() -> None: ...
def glTexImage3Di() -> None: ...
def glTexImage3Ds() -> None: ...
def glTexImage3Dub() -> None: ...
def glTexImage3Dui() -> None: ...
def glTexImage3Dus() -> None: ...
def glTexParameter() -> None:
    ...
    """
    (target, pname, parameter)
    Set a texture parameter, choose underlying call based on pname and parameter
    """

def glTexParameterIiv() -> None: ...
def glTexParameterIuiv() -> None: ...
def glTexParameterf() -> None: ...
def glTexParameterfv() -> None: ...
def glTexParameteri() -> None: ...
def glTexParameteriv() -> None: ...
def glTexStorage1D() -> None: ...
def glTexStorage2D() -> None: ...
def glTexStorage2DMultisample() -> None: ...
def glTexStorage3D() -> None: ...
def glTexStorage3DMultisample() -> None: ...
def glTexSubImage1D() -> None: ...
def glTexSubImage1Db() -> None: ...
def glTexSubImage1Df() -> None: ...
def glTexSubImage1Di() -> None: ...
def glTexSubImage1Ds() -> None: ...
def glTexSubImage1Dub() -> None: ...
def glTexSubImage1Dui() -> None: ...
def glTexSubImage1Dus() -> None: ...
def glTexSubImage2D() -> None: ...
def glTexSubImage2Db() -> None: ...
def glTexSubImage2Df() -> None: ...
def glTexSubImage2Di() -> None: ...
def glTexSubImage2Ds() -> None: ...
def glTexSubImage2Dub() -> None: ...
def glTexSubImage2Dui() -> None: ...
def glTexSubImage2Dus() -> None: ...
def glTexSubImage3D() -> None: ...
def glTexSubImage3Db() -> None: ...
def glTexSubImage3Df() -> None: ...
def glTexSubImage3Di() -> None: ...
def glTexSubImage3Ds() -> None: ...
def glTexSubImage3Dub() -> None: ...
def glTexSubImage3Dui() -> None: ...
def glTexSubImage3Dus() -> None: ...
def glTextureBarrier() -> None: ...
def glTextureBuffer() -> None: ...
def glTextureBufferRange() -> None: ...
def glTextureParameterIiv() -> None: ...
def glTextureParameterIuiv() -> None: ...
def glTextureParameterf() -> None: ...
def glTextureParameterfv() -> None: ...
def glTextureParameteri() -> None: ...
def glTextureParameteriv() -> None: ...
def glTextureStorage1D() -> None: ...
def glTextureStorage2D() -> None: ...
def glTextureStorage2DMultisample() -> None: ...
def glTextureStorage3D() -> None: ...
def glTextureStorage3DMultisample() -> None: ...
def glTextureSubImage1D() -> None: ...
def glTextureSubImage2D() -> None: ...
def glTextureSubImage3D() -> None: ...
def glTextureView() -> None: ...
def glTransformFeedbackBufferBase() -> None: ...
def glTransformFeedbackBufferRange() -> None: ...
def glTransformFeedbackVaryings() -> None: ...
def glTranslate() -> None: ...
def glTranslated() -> None: ...
def glTranslatef() -> None: ...
def glUniform1d() -> None: ...
def glUniform1dv() -> None: ...
def glUniform1f() -> None: ...
def glUniform1fv() -> None: ...
def glUniform1i() -> None: ...
def glUniform1iv() -> None: ...
def glUniform1ui() -> None: ...
def glUniform1uiv() -> None: ...
def glUniform2d() -> None: ...
def glUniform2dv() -> None: ...
def glUniform2f() -> None: ...
def glUniform2fv() -> None: ...
def glUniform2i() -> None: ...
def glUniform2iv() -> None: ...
def glUniform2ui() -> None: ...
def glUniform2uiv() -> None: ...
def glUniform3d() -> None: ...
def glUniform3dv() -> None: ...
def glUniform3f() -> None: ...
def glUniform3fv() -> None: ...
def glUniform3i() -> None: ...
def glUniform3iv() -> None: ...
def glUniform3ui() -> None: ...
def glUniform3uiv() -> None: ...
def glUniform4d() -> None: ...
def glUniform4dv() -> None: ...
def glUniform4f() -> None: ...
def glUniform4fv() -> None: ...
def glUniform4i() -> None: ...
def glUniform4iv() -> None: ...
def glUniform4ui() -> None: ...
def glUniform4uiv() -> None: ...
def glUniformBlockBinding() -> None: ...
def glUniformMatrix2dv() -> None: ...
def glUniformMatrix2fv() -> None: ...
def glUniformMatrix2x3dv() -> None: ...
def glUniformMatrix2x3fv() -> None: ...
def glUniformMatrix2x4dv() -> None: ...
def glUniformMatrix2x4fv() -> None: ...
def glUniformMatrix3dv() -> None: ...
def glUniformMatrix3fv() -> None: ...
def glUniformMatrix3x2dv() -> None: ...
def glUniformMatrix3x2fv() -> None: ...
def glUniformMatrix3x4dv() -> None: ...
def glUniformMatrix3x4fv() -> None: ...
def glUniformMatrix4dv() -> None: ...
def glUniformMatrix4fv() -> None: ...
def glUniformMatrix4x2dv() -> None: ...
def glUniformMatrix4x2fv() -> None: ...
def glUniformMatrix4x3dv() -> None: ...
def glUniformMatrix4x3fv() -> None: ...
def glUniformSubroutinesuiv() -> None: ...
def glUnmapBuffer() -> None: ...
def glUnmapNamedBuffer() -> None: ...
def glUseProgram() -> None: ...
def glUseProgramStages() -> None: ...
def glValidateProgram() -> None: ...
def glValidateProgramPipeline() -> None: ...
def glVertex() -> None:
    ...
    """
    Choose glVertexX based on number of args
    """

def glVertex2d() -> None: ...
def glVertex2dv() -> None: ...
def glVertex2f() -> None: ...
def glVertex2fv() -> None: ...
def glVertex2i() -> None: ...
def glVertex2iv() -> None: ...
def glVertex2s() -> None: ...
def glVertex2sv() -> None: ...
def glVertex3d() -> None: ...
def glVertex3dv() -> None: ...
def glVertex3f() -> None: ...
def glVertex3fv() -> None: ...
def glVertex3i() -> None: ...
def glVertex3iv() -> None: ...
def glVertex3s() -> None: ...
def glVertex3sv() -> None: ...
def glVertex4d() -> None: ...
def glVertex4dv() -> None: ...
def glVertex4f() -> None: ...
def glVertex4fv() -> None: ...
def glVertex4i() -> None: ...
def glVertex4iv() -> None: ...
def glVertex4s() -> None: ...
def glVertex4sv() -> None: ...
def glVertexArrayAttribBinding() -> None: ...
def glVertexArrayAttribFormat() -> None: ...
def glVertexArrayAttribIFormat() -> None: ...
def glVertexArrayAttribLFormat() -> None: ...
def glVertexArrayBindingDivisor() -> None: ...
def glVertexArrayElementBuffer() -> None: ...
def glVertexArrayVertexBuffer() -> None: ...
def glVertexArrayVertexBuffers() -> None: ...
def glVertexAttrib1d() -> None: ...
def glVertexAttrib1dv() -> None: ...
def glVertexAttrib1f() -> None: ...
def glVertexAttrib1fv() -> None: ...
def glVertexAttrib1s() -> None: ...
def glVertexAttrib1sv() -> None: ...
def glVertexAttrib2d() -> None: ...
def glVertexAttrib2dv() -> None: ...
def glVertexAttrib2f() -> None: ...
def glVertexAttrib2fv() -> None: ...
def glVertexAttrib2s() -> None: ...
def glVertexAttrib2sv() -> None: ...
def glVertexAttrib3d() -> None: ...
def glVertexAttrib3dv() -> None: ...
def glVertexAttrib3f() -> None: ...
def glVertexAttrib3fv() -> None: ...
def glVertexAttrib3s() -> None: ...
def glVertexAttrib3sv() -> None: ...
def glVertexAttrib4Nbv() -> None: ...
def glVertexAttrib4Niv() -> None: ...
def glVertexAttrib4Nsv() -> None: ...
def glVertexAttrib4Nub() -> None: ...
def glVertexAttrib4Nubv() -> None: ...
def glVertexAttrib4Nuiv() -> None: ...
def glVertexAttrib4Nusv() -> None: ...
def glVertexAttrib4bv() -> None: ...
def glVertexAttrib4d() -> None: ...
def glVertexAttrib4dv() -> None: ...
def glVertexAttrib4f() -> None: ...
def glVertexAttrib4fv() -> None: ...
def glVertexAttrib4iv() -> None: ...
def glVertexAttrib4s() -> None: ...
def glVertexAttrib4sv() -> None: ...
def glVertexAttrib4ubv() -> None: ...
def glVertexAttrib4uiv() -> None: ...
def glVertexAttrib4usv() -> None: ...
def glVertexAttribBinding() -> None: ...
def glVertexAttribDivisor() -> None: ...
def glVertexAttribFormat() -> None: ...
def glVertexAttribI1i() -> None: ...
def glVertexAttribI1iv() -> None: ...
def glVertexAttribI1ui() -> None: ...
def glVertexAttribI1uiv() -> None: ...
def glVertexAttribI2i() -> None: ...
def glVertexAttribI2iv() -> None: ...
def glVertexAttribI2ui() -> None: ...
def glVertexAttribI2uiv() -> None: ...
def glVertexAttribI3i() -> None: ...
def glVertexAttribI3iv() -> None: ...
def glVertexAttribI3ui() -> None: ...
def glVertexAttribI3uiv() -> None: ...
def glVertexAttribI4bv() -> None: ...
def glVertexAttribI4i() -> None: ...
def glVertexAttribI4iv() -> None: ...
def glVertexAttribI4sv() -> None: ...
def glVertexAttribI4ubv() -> None: ...
def glVertexAttribI4ui() -> None: ...
def glVertexAttribI4uiv() -> None: ...
def glVertexAttribI4usv() -> None: ...
def glVertexAttribIFormat() -> None: ...
def glVertexAttribIPointer() -> None: ...
def glVertexAttribL1d() -> None: ...
def glVertexAttribL1dv() -> None: ...
def glVertexAttribL2d() -> None: ...
def glVertexAttribL2dv() -> None: ...
def glVertexAttribL3d() -> None: ...
def glVertexAttribL3dv() -> None: ...
def glVertexAttribL4d() -> None: ...
def glVertexAttribL4dv() -> None: ...
def glVertexAttribLFormat() -> None: ...
def glVertexAttribLPointer() -> None: ...
def glVertexAttribP1ui() -> None: ...
def glVertexAttribP1uiv() -> None: ...
def glVertexAttribP2ui() -> None: ...
def glVertexAttribP2uiv() -> None: ...
def glVertexAttribP3ui() -> None: ...
def glVertexAttribP3uiv() -> None: ...
def glVertexAttribP4ui() -> None: ...
def glVertexAttribP4uiv() -> None: ...
def glVertexAttribPointer(
    index: int,
    size: int,
    type: int,
    normalized: int,
    stride: int,
    pointer: ctypes.c_void_p,
) -> None:
    ...
    """
    Set an attribute pointer for a given shader (index)

    index -- the index of the generic vertex to bind, see
        glGetAttribLocation for retrieval of the value,
        note that index is a global variable, not per-shader
    size -- number of basic elements per record, 1,2,3, or 4
    type -- enum constant for data-type
    normalized -- whether to perform int to float
        normalization on integer-type values
    stride -- stride in machine units (bytes) between
        consecutive records, normally used to create
        "interleaved" arrays
    pointer -- data-pointer which provides the data-values,
        normally a vertex-buffer-object or offset into the
        same.

    This implementation stores a copy of the data-pointer
    in the contextdata structure in order to prevent null-
    reference errors in the renderer.
    """

def glVertexBindingDivisor() -> None: ...
def glVertexP2ui() -> None: ...
def glVertexP2uiv() -> None: ...
def glVertexP3ui() -> None: ...
def glVertexP3uiv() -> None: ...
def glVertexP4ui() -> None: ...
def glVertexP4uiv() -> None: ...
def glVertexPointer() -> None: ...
def glVertexPointerb() -> None: ...
def glVertexPointerd() -> None: ...
def glVertexPointerf() -> None: ...
def glVertexPointeri() -> None: ...
def glVertexPointers() -> None: ...
def glViewport() -> None: ...
def glViewportArrayv() -> None: ...
def glViewportIndexedf() -> None: ...
def glViewportIndexedfv() -> None: ...
def glWaitSync() -> None: ...
def glWindowPos2d() -> None: ...
def glWindowPos2dv() -> None: ...
def glWindowPos2f() -> None: ...
def glWindowPos2fv() -> None: ...
def glWindowPos2i() -> None: ...
def glWindowPos2iv() -> None: ...
def glWindowPos2s() -> None: ...
def glWindowPos2sv() -> None: ...
def glWindowPos3d() -> None: ...
def glWindowPos3dv() -> None: ...
def glWindowPos3f() -> None: ...
def glWindowPos3fv() -> None: ...
def glWindowPos3i() -> None: ...
def glWindowPos3iv() -> None: ...
def glWindowPos3s() -> None: ...
def glWindowPos3sv() -> None: ...
